#!/bin/sh

# Copyright (c) 2014, 2014, Oracle and/or its affiliates. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Suite 500, Boston, MA 02110-1335 USA

#
# Wait for ALTER TABLE to begin and print to stdout lines like:
# microsecs_since_epoch secs_since_start.frac thread_id "event name" completed estimated
#

epoch_microseconds_cmd="$(dirname ${0})/epoch_microseconds"

started=0

echo "Waiting for ALTER TABLE to begin..." >&2

while : ; do
	# extract '(read PK)' out of 'stage/innodb/alter table (read PK)'
	data="$(echo "SELECT thread_id, CONCAT('\"', SUBSTR(event_name, 26), '\"'), work_completed, work_estimated FROM events_stages_current WHERE event_name LIKE '%/innodb/alter table%'" |mysql performance_schema |tail -1)"
	# if this is the first time the above query returns non-empty result
	if [ ${started} -eq 0 -a -n "${data}" ] ; then
		started=1
		echo "ALTER TABLE started, gathering data..." >&2
		start_time=$(${epoch_microseconds_cmd})
		# extract the SQL statement
		thread_id=${data%%	*}
		sql="$(echo "SELECT sql_text FROM events_statements_current WHERE thread_id = ${thread_id}" |mysql performance_schema |tail -1)"
		echo "${sql}"
		echo "${sql}" >&2
	fi
	# if no more ALTER TABLEs appear in performance schema
	if [ ${started} -eq 1 -a -z "${data}" ] ; then
		echo "ALTER TABLE finished" >&2
		break
	fi
	if [ -n "${data}" ] ; then
		now=$( ${epoch_microseconds_cmd} )
		diff="000000$((${now} - ${start_time}))"
		# convert diff=2888004 to b=2 and f=888004 (divide by 1000000)
		b=${diff%??????}
		f=${diff#${b}}
		echo "${now} ${b}.${f} ${data}"
	fi
	sleep 0.1
done
