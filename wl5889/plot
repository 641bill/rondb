#!/bin/sh

# Copyright (c) 2014, 2014, Oracle and/or its affiliates. All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Suite 500, Boston, MA 02110-1335 USA

#
# Read a file generated by the 'gather' script and print a svg graphic
# to stdout using gnuplot
#

if [ -z "${1}" ] ; then
	echo "Usage: ${0} datafile" >&2
	exit 1
fi

datafile=${1}

 colors[0]="#0000FF"
 colors[1]="#00FF00"
 colors[2]="#FF0000"
 colors[3]="#00FFFF"
 colors[4]="#FF00FF"
 colors[5]="#FFFF00"
 colors[6]="#000088"
 colors[7]="#008800"
 colors[8]="#880000"
 colors[9]="#008888"
colors[10]="#880088"
colors[11]="#888800"

prev_line_phase=""
prev_phase_i=0
prev_phase_beg_timestamp=0
gnuplot_cmds=""

i=0
while read line ; do
	# skip the first line (header, which contains the SQL command)
	i=$((${i} + 1))
	if [ ${i} -eq 1 ] ; then
		continue
	fi

	# extract "read PK" from "1415625805889325 113998 39 (read PK) 12386 109119"
	phase=${line#*(}
	phase=${phase%)*}

	# extract "113998" from "1415625805889325 113998 39 (read PK) 12386 109119"
	timestamp=${line#* }
	timestamp=${timestamp%% *}

	# a new phase has started
	if [ "${prev_line_phase}" != "${phase}" -a -n "${prev_line_phase}" ] ; then
		gnuplot_cmds="${gnuplot_cmds} \"${datafile}\" every ::1 using (\$2 >= ${prev_phase_beg_timestamp} && \$2 <= ${prev_line_timestamp} ? \$2 : 1 / 0):5 title \"${prev_line_phase}\" noenhanced with filledcurves x1 linecolor rgb \"${colors[${prev_phase_i}]}\", "
		prev_phase_i=$(((${prev_phase_i} + 1) % ${#colors[*]}))
		prev_phase_beg_timestamp=${timestamp}
	fi

	prev_line_phase=${phase}
	prev_line_timestamp=${timestamp}
done < ${datafile}

gnuplot_cmds="${gnuplot_cmds} \"${datafile}\" every ::1 using (\$2 >= ${prev_phase_beg_timestamp} ? \$2 : 1 / 0):5 title \"${prev_line_phase}\" noenhanced with filledcurves x1 linecolor rgb \"${colors[${prev_phase_i}]}\""

gnuplot <<CMDS
set title '$(head -1 ${datafile})' noenhanced
set terminal svg size 1800,900 dynamic enhanced mouse standalone
set format x "%.1f"
set xlabel "time (seconds)"
set format y "%.0f"
set ylabel "work done (abstract units)"
set style fill transparent solid 0.35
plot ${gnuplot_cmds}, "" every ::1 using 2:6 title "estimated" with lines linecolor rgb "#000000"
quit
CMDS
