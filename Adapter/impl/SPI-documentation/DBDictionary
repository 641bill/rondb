
/* Methods on DBDictionary */
{  
  /** List all tables in the schema
    * ASYNC
    * 
    */
    listTables(databaseName, callback(error, array));

    
  /** Fetch metadata for a table
    * ASYNC
    * 
    */
    getTable(databaseName, tableName, callback(error, DBTable));
}
 

DBColumn = {
  columnType    : ""    ,  //  a ColumnType
  intSize       : null  ,  //  1,2,3,4, or 8 if column type is INT (undefined?)
  isUnsigned    : false ,  //  true for UNSIGNED
  isNullable    : false ,  //  true if NULLABLE
  scale         : 0     ,  //  DECIMAL scale
  precision     : 0     ,  //  DECIMAL precision
  length        : 0     ,  //  CHAR or VARCHAR length
  isBinary      : false ,  //  true for BLOB/BINARY/VARBINARY
  charsetNumber : 0     ,  //  internal number of charset
  charsetName   : ""    ,  //  name of charset
  name          : ""    ,  //  column name
  columnNumber  : -1    ,  //  position of column in table
  isPrimaryKey  : false ,  //  true if column is part of PK
  userData      : ""       //  Data stored in the DBColumn by the ORM layer
};


DBIndex = {
  name          : ""    ,  // External or Internal index name (see clusterj-core store/Index.java)
  isPrimaryKey  : false ,  // bool
  isUnique      : false ,  // bool
  isOrdered     : false ,  // bool; can scan if true
  columns       : []    ,  // an array of DBColumn objects
  userData      : ""       // Data stored in the DBIndex by the ORM layer
};


DBTable = {
  name          : ""    ,  // Table Name
  columns       : []    ,  // an array of DBColumn objects
  primaryKey    : {}    ,  // a DBIndex object
  secondaryIndexes: []  ,  // an array of DBIndex objects 
  userData      : ""       // Data stored in the DBTable by the ORM layer
}


ColumnTypes =  [
  "INT", 
  "FLOAT",
  "DOUBLE",
  "DECIMAL",
  "CHAR",
  "VARCHAR",
  "BLOB",
  "DATE",
  "TIME",
  "DATETIME",
  "YEAR",
  "TIMESTAMP",
  "BIT",
  "BINARY",
  "VARBINARY"
];

