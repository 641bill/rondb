/*
 Copyright (c) 2014, Oracle and/or its affiliates. All rights
 reserved.
 
 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; version 2 of
 the License.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 02110-1301  USA
 */

"use strict";


/* These tests use primary keys 300-399 */

/*  
 id int NOT NULL,
  tposint int unsigned,
  tfloat float NOT NULL,
  tposfloat float unsigned,
  tdouble double,
  tnumber decimal(11,3),
  tposnumber decimal(11,3) unsigned
*/
function makePass(testCase) {
  return function() { testCase.pass(); }
}

function makeFail(testCase, message) {
  return function() { testCase.fail(message); }
}

function shouldSucceed(test, promise) {
  promise.then(makePass(test), makeFail(test, "Should succeed"));
};

function shouldGetError(test, sqlstate, promise) {
  var message = "should get error " + sqlstate;
  promise.then(makeFail(test, message), function(error) {
    test.errorIfNotEqual("SQLState", sqlstate, error.sqlstate);
    test.failOnError();
  })
};


// Write numbers to all columns

// Write a string to a float column; should succeed
var t1 = new harness.ConcurrentTest("WriteStringToFloatCol");
t1.run = function() {
  fail_openSession(t1, function(session) {
    shouldSucceed(t1, 
      session.persist( ));
  });
}


// Write string to double column: OK

// Write string to decimal column: OK

// Write positive int to unsigned float column: OK

// Write negative int to unsigned float column: should fail with 22003

// Write negative value to unsigned decimal column: 22003

// Write string containing negative value to unsigned float: 22003

// Write string containing negative value to unsigned decimal:  22003 
