# Tests for PERFORMANCE_SCHEMA

--source include/not_embedded.inc
--source include/have_perfschema.inc

# Test index on NAME

# Set to a known state
--disable_query_log

update performance_schema.setup_timers
  set timer_name='CYCLE' where name="wait";
update performance_schema.setup_timers
  set timer_name='NANOSECOND' where name="stage";
update performance_schema.setup_timers
  set timer_name='NANOSECOND' where name="statement";
update performance_schema.setup_timers
  set timer_name='MICROSECOND' where name="transaction";
update performance_schema.setup_timers
  set timer_name='MICROSECOND' where name="idle";

--enable_query_log

--echo ############ Explain for Query ####################################
--replace_column 10 #
explain select NAME
  from performance_schema.setup_timers
  where NAME = "impossible";

--echo ############ Explain for Query ####################################
--replace_column 10 #
explain select NAME
  from performance_schema.setup_timers
  where NAME = "statement";

--echo ############# Explain End #########################################

flush status;

select *
  from performance_schema.setup_timers
  where NAME = "statement";

show session status like "handler_read%";

select *
  from performance_schema.setup_timers
  where NAME = "statement";

show session status like "handler_read%";


# Cleanup, restore to defaults

--disable_query_log

update performance_schema.setup_timers
 set timer_name='CYCLE' where name="wait";
update performance_schema.setup_timers
 set timer_name='NANOSECOND' where name="stage";
update performance_schema.setup_timers
 set timer_name='NANOSECOND' where name="statement";
update performance_schema.setup_timers
  set timer_name='MICROSECOND' where name="transaction";
update performance_schema.setup_timers
  set timer_name='MICROSECOND' where name="idle";

--enable_query_log
