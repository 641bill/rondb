## create tables and tablespaces without absolute paths
CREATE TABLESPACE ts1 ADD DATAFILE 'ts1.ibd' Engine=InnoDB;
CREATE TABLE tab1(c1 int, c2 varchar(10)) TABLESPACE=ts1;
INSERT INTO tab1 VALUES(1, 'VISH');
CREATE TABLE tab2(c1 int, c2 varchar(10)) Engine=InnoDB;
INSERT INTO tab2 VALUES(2, 'VISH');
CREATE INDEX ix1 ON tab1(c2) USING BTREE;
CREATE INDEX ix1 ON tab2(c2) ;
## create tables and tablespaces with absolute paths
CREATE TABLE tab3(empno INT, ename VARCHAR(30),sal NUMERIC(3)) ENGINE=InnoDB ROW_FORMAT=COMPRESSED
PARTITION by hash(empno) (PARTITION P0 DATA DIRECTORY 'data_directory1/data_directory1',
PARTITION P1 DATA DIRECTORY 'data_directory1/data_directory1');
CREATE INDEX ix1 ON tab3(ename) USING BTREE;
INSERT INTO tab3 VALUES (100,'VISWANATH',100);
INSERT INTO tab3 VALUES (300,'VISWANATH',100);
SHOW CREATE TABLE tab1;
Table	Create Table
tab1	CREATE TABLE `tab1` (
  `c1` int(11) DEFAULT NULL,
  `c2` varchar(10) DEFAULT NULL,
  KEY `ix1` (`c2`) USING BTREE
) /*!50100 TABLESPACE `ts1` */ ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
SHOW CREATE TABLE tab2;
Table	Create Table
tab2	CREATE TABLE `tab2` (
  `c1` int(11) DEFAULT NULL,
  `c2` varchar(10) DEFAULT NULL,
  KEY `ix1` (`c2`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
SHOW CREATE TABLE tab3;
Table	Create Table
tab3	CREATE TABLE `tab3` (
  `empno` int(11) DEFAULT NULL,
  `ename` varchar(30) DEFAULT NULL,
  `sal` decimal(3,0) DEFAULT NULL,
  KEY `ix1` (`ename`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPRESSED
/*!50100 PARTITION BY HASH (`empno`)
(PARTITION P0 DATA DIRECTORY = 'data_directory1/data_directory1/' ENGINE = InnoDB,
 PARTITION P1 DATA DIRECTORY = 'data_directory1/data_directory1/' ENGINE = InnoDB) */
## Stop DB server
# Copy whole --datadir files into new location
## Copy absolute path *.ibd files into new location
## Remove the old absolute path *.ibd files
## Start with new --datadir and --innodb-directories options
# restart: --datadir=data_directory2/new_datadir/data --innodb-directories=data_directory2/new_datadir/data;data_directory2/data_directory2/test
## Check while passing new datadir and new absolute path
SELECT @@datadir;
@@datadir
NEW_DATADIR/
SHOW CREATE TABLE tab3;
Table	Create Table
tab3	CREATE TABLE `tab3` (
  `empno` int(11) DEFAULT NULL,
  `ename` varchar(30) DEFAULT NULL,
  `sal` decimal(3,0) DEFAULT NULL,
  KEY `ix1` (`ename`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPRESSED
/*!50100 PARTITION BY HASH (`empno`)
(PARTITION P0 DATA DIRECTORY = 'data_directory2/data_directory2' ENGINE = InnoDB,
 PARTITION P1 DATA DIRECTORY = 'data_directory2/data_directory2' ENGINE = InnoDB) */
## Stop DB server
## Start with new --datadir and without --innodb-directories option
# restart: --datadir=NEW_DATADIR
## Check with new --datadir only
SELECT @@datadir;
@@datadir
NEW_DATADIR/
## Check the tables with SHOW
SHOW CREATE TABLE tab1;
Table	Create Table
tab1	CREATE TABLE `tab1` (
  `c1` int(11) DEFAULT NULL,
  `c2` varchar(10) DEFAULT NULL,
  KEY `ix1` (`c2`) USING BTREE
) /*!50100 TABLESPACE `ts1` */ ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
SHOW CREATE TABLE tab2;
Table	Create Table
tab2	CREATE TABLE `tab2` (
  `c1` int(11) DEFAULT NULL,
  `c2` varchar(10) DEFAULT NULL,
  KEY `ix1` (`c2`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4
SHOW CREATE TABLE tab3;
Table	Create Table
tab3	CREATE TABLE `tab3` (
  `empno` int(11) DEFAULT NULL,
  `ename` varchar(30) DEFAULT NULL,
  `sal` decimal(3,0) DEFAULT NULL,
  KEY `ix1` (`ename`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPRESSED
/*!50100 PARTITION BY HASH (`empno`)
(PARTITION P0 DATA DIRECTORY = 'data_directory2/data_directory2' ENGINE = InnoDB,
 PARTITION P1 DATA DIRECTORY = 'data_directory2/data_directory2' ENGINE = InnoDB) */
## Check with DML & DDL operations
SELECT * FROM tab1;
c1	c2
1	VISH
SELECT * FROM tab2;
c1	c2
2	VISH
SELECT * FROM tab3;
empno	ename	sal
100	VISWANATH	100
300	VISWANATH	100
DELETE FROM tab1;
DELETE FROM tab2;
DELETE FROM tab3;
INSERT INTO tab1 VALUES(1, 'VISH');
INSERT INTO tab2 VALUES(2, 'VISH');
INSERT INTO tab3 VALUES (100,'VISWANATH',100);
INSERT INTO tab3 VALUES (300,'VISWANATH',100);
SELECT * FROM tab1;
c1	c2
1	VISH
SELECT * FROM tab2;
c1	c2
2	VISH
SELECT * FROM tab3;
empno	ename	sal
100	VISWANATH	100
300	VISWANATH	100
DROP TABLE tab1;
DROP TABLE tab2;
DROP TABLESPACE ts1;
# Stop DB server with new datadir
## Test with relative paths of --datadir and absolute path
# restart: --datadir=NEW_DATADIR/data_directory2/test/../../new_datadir/data --innodb-directories=NEW_DATADIR/new_datadir/data/../../data_directory2/test
## Check relative path while passing as new datadir and new absolute path
SELECT @@datadir;
@@datadir
NEW_DATADIR/data_directory2/test/../../new_datadir/data/
SHOW CREATE TABLE tab3;
Table	Create Table
tab3	CREATE TABLE `tab3` (
  `empno` int(11) DEFAULT NULL,
  `ename` varchar(30) DEFAULT NULL,
  `sal` decimal(3,0) DEFAULT NULL,
  KEY `ix1` (`ename`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPRESSED
/*!50100 PARTITION BY HASH (`empno`)
(PARTITION P0 DATA DIRECTORY = 'NEW_DATADIR/data_directory2' ENGINE = InnoDB,
 PARTITION P1 DATA DIRECTORY = 'NEW_DATADIR/data_directory2' ENGINE = InnoDB) */
# Stop DB server with new datadir
## Test with relative path of --datadir
# restart: --datadir=NEW_DATADIR/data_directory2/test/../../new_datadir/data
## Check relative path of --datadir
SELECT @@datadir;
@@datadir
NEW_DATADIR/data_directory2/test/../../new_datadir/data/
SHOW CREATE TABLE tab3;
Table	Create Table
tab3	CREATE TABLE `tab3` (
  `empno` int(11) DEFAULT NULL,
  `ename` varchar(30) DEFAULT NULL,
  `sal` decimal(3,0) DEFAULT NULL,
  KEY `ix1` (`ename`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 ROW_FORMAT=COMPRESSED
/*!50100 PARTITION BY HASH (`empno`)
(PARTITION P0 DATA DIRECTORY = 'NEW_DATADIR/data_directory2' ENGINE = InnoDB,
 PARTITION P1 DATA DIRECTORY = 'NEW_DATADIR/data_directory2' ENGINE = InnoDB) */
# Stop DB server with new datadir
## Copy absolute path *.ibd files back to old location
## Remove the new DATA DIRECTORY *.ibd files
# Re-start with old --datadir
# restart: --datadir=OLD_DATADIR 
# Check --datadir started with old
SELECT @@datadir;
@@datadir
OLD_DATADIR
DROP TABLE tab1;
DROP TABLE tab2;
DROP TABLE tab3;
