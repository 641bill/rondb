#
# Bug #84958 InnoDB's MVCC has O(N^2) behaviors
# https://bugs.mysql.com/bug.php?id=84958
#
# Set up the test with a procedure and a function.
#
CREATE PROCEDURE insert_n(start int, end int)
BEGIN
DECLARE i INT DEFAULT start;
WHILE i <= end do
INSERT INTO t1 VALUES (1, 2, 'one', 1) ON DUPLICATE KEY UPDATE d = i, c = repeat('two_', i);
SET i = i + 1;
END while;
END~~
CREATE FUNCTION num_pages_get()
RETURNS INT
BEGIN
DECLARE ret INT;
SELECT number_pages_get FROM information_schema.innodb_buffer_pool_stats INTO ret;
RETURN ret;
END~~
#
# Create a table with one record in it and start an RR transaction
#
CREATE TABLE t1 (a INT, b INT, c TEXT, d INT, PRIMARY KEY(a,b), KEY (b,d));
INSERT INTO t1 VALUES (1, 2, 'zero', 0);
BEGIN;
SELECT * FROM t1;
a	b	c	d
1	2	zero	0
#
# Create 100 newer record versions in con2 and con3
#
CALL insert_n(1, 50);;
CALL insert_n(51, 100);;
INSERT INTO t1 VALUES (1, 2, 'one', 1) ON DUPLICATE KEY UPDATE d = 101, c = repeat('2', 101);
#
# Connect to default and record how many pages were accessed
# when selecting the record using the secondary key.
#
SET @num_pages_1 = num_pages_get();
SELECT * FROM t1 force index (b);
a	b	c	d
1	2	zero	0
SET @num_pages_2= num_pages_get();
SELECT @num_pages_2 - @num_pages_1 < 1000;
@num_pages_2 - @num_pages_1 < 1000
1
#
# Commit and show the final record.
#
SELECT * FROM t1;
a	b	c	d
1	2	zero	0
COMMIT;
SELECT * FROM t1 force index (b);
a	b	c	d
1	2	22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222	101
SELECT * FROM t1;
a	b	c	d
1	2	22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222	101
#
# Cleanup
#
DROP TABLE T1;
DROP PROCEDURE insert_n;
DROP FUNCTION num_pages_get;
