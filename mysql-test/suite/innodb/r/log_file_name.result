# Test tablespace discovery during crash recovery
# including the detection of duplicate and missing tablespaces
# Clear old log file
# restart
# Do up some DDL and DML to recover
SET GLOBAL innodb_file_per_table=ON;
SET GLOBAL innodb_master_thread_disabled_debug=1;
CREATE TABLE t1(a INT PRIMARY KEY) ENGINE=InnoDB;
SET GLOBAL innodb_checkpoint_disabled=1;
BEGIN;
INSERT INTO t1 VALUES (1964),(12),(25);
UPDATE t1 SET a=2000 where a=1964;
COMMIT;
# Kill the server
# Server should never start when there are files with duplicate space IDs
# Fault 1 tblespace files with duplicate space_id.
# Attempt to start mysqld. Recovery will fail - duplicate space ID
# Remove files with duplicate space ID from fault 1
# Should startup fine
# restart
DROP TABLE t1;
CREATE TABLE t1(a INT PRIMARY KEY) ENGINE=InnoDB;
SET GLOBAL innodb_checkpoint_disabled=1;
BEGIN;
INSERT INTO t1 VALUES (1964),(12),(25);
COMMIT;
# Kill the server
# Fault 2: Dirty tablespaces with missing files
# Attempt to start mysqld. Recovery will fail, missing tablespace file
# Fault 3: Empty data file
# Attempt to start mysqld. Recovery will fail
# Restore t1.ibd
# restart
SELECT * FROM t1;
a
12
25
1964
SHOW TABLES;
Tables_in_test
t1
DROP TABLE t1;
SET GLOBAL innodb_master_thread_disabled_debug=1;
SET GLOBAL innodb_checkpoint_disabled=1;
CREATE TABLE t1(a INT PRIMARY KEY) ENGINE=InnoDB;
INSERT INTO t1 VALUES(2008), (08), (25);
# Kill the server
# Make the header page of t1.ibd consists of zero bytes
".ibd files cannot have a space id of 0"
# Should startup fine
# restart
DROP TABLE t1;
# List of files:
SHOW TABLES;
Tables_in_test
SELECT * FROM INFORMATION_SCHEMA.INNODB_TABLES
WHERE NAME NOT LIKE 'SYS_%' AND NAME NOT LIKE 'sys/%' AND NAME NOT LIKE 'mysql/%';
TABLE_ID	NAME	FLAG	N_COLS	SPACE	ROW_FORMAT	ZIP_PAGE_SIZE	SPACE_TYPE
