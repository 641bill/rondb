#########
# SETUP #
#########
# Stop the running the server
# Copy and unzip the datadir.
# Restart the server against the unzipped datadir
# restart: --datadir=DATADIR --innodb-page-size=16k
##############################################
# Test instant ADD/DROP COLUMN for REDUNDANT format
##############################################
# ------------------------------------------------------------
# Start server with old datadir with table t1_redundant having
#     c1, c2, normal columns
#     c3 INSTANT ADD column with default def_c3.
#     c4 INSTANT ADD column with default def_c4.
#     with 4 partitions (p0, p1, p2, p3)
# ------------------------------------------------------------
SHOW CREATE TABLE t1_redundant;
Table	Create Table
t1_redundant	CREATE TABLE `t1_redundant` (
  `c1` int DEFAULT NULL,
  `c2` char(10) DEFAULT NULL,
  `c3` char(10) DEFAULT 'c3_def',
  `c4` char(10) DEFAULT 'c4_def'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=REDUNDANT
/*!50100 PARTITION BY RANGE (`c1`)
(PARTITION p0 VALUES LESS THAN (100) ENGINE = InnoDB,
 PARTITION p1 VALUES LESS THAN (200) ENGINE = InnoDB,
 PARTITION p2 VALUES LESS THAN (300) ENGINE = InnoDB,
 PARTITION p3 VALUES LESS THAN (400) ENGINE = InnoDB) */
# ------------------------------------------------------------
# Read rows from upgraded table t1_redundant
# ------------------------------------------------------------
# DD Metadata of columns in table
NAME	ORDINAL_POSITION	TYPE	HAS_NO_DEFAULT	HIDDEN	SE_PRIVATE_DATA
c1	1	MYSQL_TYPE_LONG	0	Visible	table_id=TABLE_ID;
c2	2	MYSQL_TYPE_STRING	0	Visible	table_id=TABLE_ID;
c3	3	MYSQL_TYPE_STRING	0	Visible	default=63335f64656620202020202020202020202020202020202020202020202020202020202020202020;table_id=TABLE_ID;
c4	4	MYSQL_TYPE_STRING	0	Visible	default=63345f64656620202020202020202020202020202020202020202020202020202020202020202020;table_id=TABLE_ID;
DB_ROW_ID	5	MYSQL_TYPE_INT24	0	SE	table_id=TABLE_ID;
DB_TRX_ID	6	MYSQL_TYPE_INT24	0	SE	table_id=TABLE_ID;
DB_ROLL_PTR	7	MYSQL_TYPE_LONGLONG	0	SE	table_id=TABLE_ID;
# DD Metadata of partitions in table
NAME	DESCRIPTION_UTF8	SE_PRIVATE_DATA
p0	100	instant_col=2;
p1	200	instant_col=2;
p2	300	instant_col=2;
p3	400	instant_col=2;
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_redundant#p#p0	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_redundant#p#p1	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_redundant#p#p2	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_redundant#p#p3	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
SELECT * FROM t1_redundant ORDER BY c1;
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
60	r6c2	r6c3	r6c4
110	r2c2	c3_def	c4_def
210	r3c2	c3_def	c4_def
310	r4c2	c3_def	c4_def
# ------------------------------------------------------------
# REORGANIZE PARTITION (p0 into p0_a p0_b)
# ------------------------------------------------------------
SELECT * FROM t1_redundant PARTITION (p0);
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
60	r6c2	r6c3	r6c4
ALTER TABLE t1_redundant ALGORITHM=INPLACE, REORGANIZE PARTITION p0 INTO (PARTITION p0_a VALUES LESS THAN (50), PARTITION p0_b VALUES LESS THAN (100));
SELECT * FROM t1_redundant PARTITION (p0_a);
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
SELECT * FROM t1_redundant PARTITION (p0_b);
c1	c2	c3	c4
60	r6c2	r6c3	r6c4
SELECT * FROM t1_redundant ORDER BY c1;
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
60	r6c2	r6c3	r6c4
110	r2c2	c3_def	c4_def
210	r3c2	c3_def	c4_def
310	r4c2	c3_def	c4_def
DROP TABLE t1_redundant;
############################################
# Test instant ADD/DROP COLUMN for DYNAMIC format
############################################
# ------------------------------------------------------------
# Start server with old datadir with table t1_dynamic having
#     c1, c2, normal columns
#     c3 INSTANT ADD column with default def_c3.
#     c4 INSTANT ADD column with default def_c4.
#     with 4 partitions (p0, p1, p2, p3)
# ------------------------------------------------------------
SHOW CREATE TABLE t1_dynamic;
Table	Create Table
t1_dynamic	CREATE TABLE `t1_dynamic` (
  `c1` int DEFAULT NULL,
  `c2` char(10) DEFAULT NULL,
  `c3` char(10) DEFAULT 'c3_def',
  `c4` char(10) DEFAULT 'c4_def'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=DYNAMIC
/*!50100 PARTITION BY RANGE (`c1`)
(PARTITION p0 VALUES LESS THAN (100) ENGINE = InnoDB,
 PARTITION p1 VALUES LESS THAN (200) ENGINE = InnoDB,
 PARTITION p2 VALUES LESS THAN (300) ENGINE = InnoDB,
 PARTITION p3 VALUES LESS THAN (400) ENGINE = InnoDB) */
# ------------------------------------------------------------
# Read rows from upgraded table t1_dynamic
# ------------------------------------------------------------
# DD Metadata of columns in table
NAME	ORDINAL_POSITION	TYPE	HAS_NO_DEFAULT	HIDDEN	SE_PRIVATE_DATA
c1	1	MYSQL_TYPE_LONG	0	Visible	table_id=TABLE_ID;
c2	2	MYSQL_TYPE_STRING	0	Visible	table_id=TABLE_ID;
c3	3	MYSQL_TYPE_STRING	0	Visible	default=63335f64656620202020;table_id=TABLE_ID;
c4	4	MYSQL_TYPE_STRING	0	Visible	default=63345f64656620202020;table_id=TABLE_ID;
DB_ROW_ID	5	MYSQL_TYPE_INT24	0	SE	table_id=TABLE_ID;
DB_TRX_ID	6	MYSQL_TYPE_INT24	0	SE	table_id=TABLE_ID;
DB_ROLL_PTR	7	MYSQL_TYPE_LONGLONG	0	SE	table_id=TABLE_ID;
# DD Metadata of partitions in table
NAME	DESCRIPTION_UTF8	SE_PRIVATE_DATA
p0	100	instant_col=2;
p1	200	instant_col=2;
p2	300	instant_col=2;
p3	400	instant_col=2;
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_dynamic#p#p0	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_dynamic#p#p1	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_dynamic#p#p2	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_dynamic#p#p3	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
SELECT * FROM t1_dynamic ORDER BY c1;
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
60	r6c2	r6c3	r6c4
110	r2c2	c3_def	c4_def
210	r3c2	c3_def	c4_def
310	r4c2	c3_def	c4_def
# ------------------------------------------------------------
# REORGANIZE PARTITION (p0 into p0_a p0_b)
# ------------------------------------------------------------
SELECT * FROM t1_dynamic PARTITION (p0);
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
60	r6c2	r6c3	r6c4
ALTER TABLE t1_dynamic ALGORITHM=INPLACE, REORGANIZE PARTITION p0 INTO (PARTITION p0_a VALUES LESS THAN (50), PARTITION p0_b VALUES LESS THAN (100));
SELECT * FROM t1_dynamic PARTITION (p0_a);
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
SELECT * FROM t1_dynamic PARTITION (p0_b);
c1	c2	c3	c4
60	r6c2	r6c3	r6c4
SELECT * FROM t1_dynamic ORDER BY c1;
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
60	r6c2	r6c3	r6c4
110	r2c2	c3_def	c4_def
210	r3c2	c3_def	c4_def
310	r4c2	c3_def	c4_def
DROP TABLE t1_dynamic;
############################################
# Test instant ADD/DROP COLUMN for COMPACT format
############################################
# ------------------------------------------------------------
# Start server with old datadir with table t1_compact having
#     c1, c2, normal columns
#     c3 INSTANT ADD column with default def_c3.
#     c4 INSTANT ADD column with default def_c4.
#     with 4 partitions (p0, p1, p2, p3)
# ------------------------------------------------------------
SHOW CREATE TABLE t1_compact;
Table	Create Table
t1_compact	CREATE TABLE `t1_compact` (
  `c1` int DEFAULT NULL,
  `c2` char(10) DEFAULT NULL,
  `c3` char(10) DEFAULT 'c3_def',
  `c4` char(10) DEFAULT 'c4_def'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci ROW_FORMAT=COMPACT
/*!50100 PARTITION BY RANGE (`c1`)
(PARTITION p0 VALUES LESS THAN (100) ENGINE = InnoDB,
 PARTITION p1 VALUES LESS THAN (200) ENGINE = InnoDB,
 PARTITION p2 VALUES LESS THAN (300) ENGINE = InnoDB,
 PARTITION p3 VALUES LESS THAN (400) ENGINE = InnoDB) */
# ------------------------------------------------------------
# Read rows from upgraded table t1_compact
# ------------------------------------------------------------
# DD Metadata of columns in table
NAME	ORDINAL_POSITION	TYPE	HAS_NO_DEFAULT	HIDDEN	SE_PRIVATE_DATA
c1	1	MYSQL_TYPE_LONG	0	Visible	table_id=TABLE_ID;
c2	2	MYSQL_TYPE_STRING	0	Visible	table_id=TABLE_ID;
c3	3	MYSQL_TYPE_STRING	0	Visible	default=63335f64656620202020;table_id=TABLE_ID;
c4	4	MYSQL_TYPE_STRING	0	Visible	default=63345f64656620202020;table_id=TABLE_ID;
DB_ROW_ID	5	MYSQL_TYPE_INT24	0	SE	table_id=TABLE_ID;
DB_TRX_ID	6	MYSQL_TYPE_INT24	0	SE	table_id=TABLE_ID;
DB_ROLL_PTR	7	MYSQL_TYPE_LONGLONG	0	SE	table_id=TABLE_ID;
# DD Metadata of partitions in table
NAME	DESCRIPTION_UTF8	SE_PRIVATE_DATA
p0	100	instant_col=2;
p1	200	instant_col=2;
p2	300	instant_col=2;
p3	400	instant_col=2;
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_compact#p#p0	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_compact#p#p1	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_compact#p#p2	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
# Metadata from INFORMATION_SCHEMA.TABLES
NAME	N_COLS	INSTANT_COLS	TOTAL_ROW_VERSIONS	INITIAL_COLUMN_COUNTS	CURRENT_COLUMN_COUNTS	TOTAL_COLUMN_COUNTS
test/t1_compact#p#p3	7	2	0	4	4	4
# Metadata from INFORMATION_SCHEMA.COLUMNS
NAME	POS	MTYPE	PRTYPE	HAS_DEFAULT	VERSION_ADDED	VERSION_DROPPED
c1	0	6	1027	0	0	0
c2	1	13	16711934	0	0	0
c3	2	13	16711934	1	0	0
c4	3	13	16711934	1	0	0
SELECT * FROM t1_compact ORDER BY c1;
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
60	r6c2	r6c3	r6c4
110	r2c2	c3_def	c4_def
210	r3c2	c3_def	c4_def
310	r4c2	c3_def	c4_def
# ------------------------------------------------------------
# REORGANIZE PARTITION (p0 into p0_a p0_b)
# ------------------------------------------------------------
SELECT * FROM t1_compact PARTITION (p0);
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
60	r6c2	r6c3	r6c4
ALTER TABLE t1_compact ALGORITHM=INPLACE, REORGANIZE PARTITION p0 INTO (PARTITION p0_a VALUES LESS THAN (50), PARTITION p0_b VALUES LESS THAN (100));
SELECT * FROM t1_compact PARTITION (p0_a);
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
SELECT * FROM t1_compact PARTITION (p0_b);
c1	c2	c3	c4
60	r6c2	r6c3	r6c4
SELECT * FROM t1_compact ORDER BY c1;
c1	c2	c3	c4
10	r1c2	c3_def	c4_def
40	r5c2	r5c3	c4_def
60	r6c2	r6c3	r6c4
110	r2c2	c3_def	c4_def
210	r3c2	c3_def	c4_def
310	r4c2	c3_def	c4_def
DROP TABLE t1_compact;
###########
# CLEANUP #
###########
# Shutdown server
# Remove copied files
# Restarting server to restore server state
# restart
