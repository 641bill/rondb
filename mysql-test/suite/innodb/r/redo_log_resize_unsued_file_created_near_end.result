SELECT @@innodb_redo_log_capacity INTO @old_capacity;
SET GLOBAL innodb_redo_log_capacity=10485760;
SET GLOBAL innodb_monitor_enable = log_lsn_current;
CREATE TABLE t1(id BIGINT PRIMARY KEY, v BIGINT );
INSERT INTO t1 VALUES (1,1);
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
INSERT INTO t1 SELECT (SELECT MAX(id) FROM t1)+id,v FROM t1;
DO innodb_redo_log_consumer_register();
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_before;
UPDATE t1 SET v=v+1;
SELECT `COUNT` FROM INFORMATION_SCHEMA.INNODB_METRICS
WHERE NAME = 'log_lsn_current' INTO @lsn_after;
SELECT (@lsn_after - @lsn_before) > 90000;
(@lsn_after - @lsn_before) > 90000
1
SELECT MAX(start_lsn) FROM performance_schema.innodb_redo_log_files
INTO @base_lsn;
DO innodb_redo_log_consumer_advance(@base_lsn);
SET GLOBAL innodb_redo_log_capacity=10485760 * 4;
UPDATE t1 SET v=v+1;
UPDATE t1 SET v=v+1;
UPDATE t1 SET v=v+1;
UPDATE t1 SET v=v+1;
SELECT MAX(end_lsn-start_lsn) FROM performance_schema.innodb_redo_log_files
INTO @lsns_per_file;
SELECT 31-COUNT(*) FROM performance_schema.innodb_redo_log_files
WHERE (end_lsn-start_lsn) = @lsns_per_file INTO @files_to_create;
SELECT MAX(end_lsn) FROM performance_schema.innodb_redo_log_files
INTO @last_file_lsn;
SELECT @last_file_lsn+@files_to_create*@lsns_per_file INTO @stop_lsn;
# Produce data until we get "20% close to end of 32rd file"
# Now switch to small files again:
SET GLOBAL innodb_redo_log_capacity=10485760;
# Write just enough to cross the 10% (of a small file!) from the end
# Now switch to big files again:
SET GLOBAL innodb_redo_log_capacity=10485760*4;
DROP TABLE t1;
SET GLOBAL innodb_redo_log_capacity=@old_capacity;
