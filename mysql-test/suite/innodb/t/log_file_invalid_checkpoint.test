# This test checks scenario of recovery executed on data directory with redo file that has broken checkpoint_lsn (pointing outside the file)

let $tmp_dir = $MYSQLTEST_VARDIR/tmp;
let MYSQLD_DATADIR = $tmp_dir/log_invalid_file;
let MYSQLD_ERROR_LOG = $tmp_dir/my_restart.err;
let MYSQLD_ARGS = --skip-networking;
let SEARCH_FILE = $MYSQLD_ERROR_LOG;

--echo # Initialize new data directory...
--source include/initialize_datadir.inc

perl;
    require 'include/ib_redo_log_files.inc';
    my $fpath = '';
    my $n = 0;
    for my $f (log_get_non_tmp_files()) {
        $fpath = $f;
        $n++;
    }
    my $start_lsn = log_file_get_start_lsn($fpath);
    my $end_lsn = $start_lsn + (-s $fpath) - 2048;
    my $old_checkpoint_lsn = log_file_get_checkpoint_lsn($fpath);
    my $new_checkpoint_lsn = $end_lsn + 12;
    log_file_set_checkpoint_lsn($fpath, $new_checkpoint_lsn, $old_checkpoint_lsn);

    my $result_file_path = "$ENV{'MYSQLD_DATADIR'}/found.inc";
    open my $fh, '+>', $result_file_path or die "open failed: $!\n";
    if ($n > 1) {
        syswrite($fh, "--skip \"Initialized datadir with more than 1 redo file.\"\n") > 0 or die "write failed: $!\n";
    }
    syswrite($fh, "let REDO_OLD_CHECKPOINT_LSN=$old_checkpoint_lsn;\n") > 0 or die "write failed: $!\n";
    syswrite($fh, "let REDO_NEW_CHECKPOINT_LSN=$new_checkpoint_lsn;\n") > 0 or die "write failed: $!\n";
    syswrite($fh, "let REDO_FILE_START_LSN=$start_lsn;\n") > 0 or die "write failed: $!\n";
    syswrite($fh, "let REDO_FILE_END_LSN=$end_lsn;\n") > 0 or die "write failed: $!\n";
    close $fh or die "close failed: $!\n";
EOF

--source $MYSQLD_DATADIR/found.inc

# The recovery would fail because of invalid checksum (after we corrupted checkpoint_lsn and did not update checksum)
--error 1,42
--exec $MYSQLD_CMD $MYSQLD_ARGS --innodb-unknown-param=y > $SEARCH_FILE 2>&1 ;
let SEARCH_PATTERN = No valid checkpoint found \(corrupted redo log\). You can try --innodb-force-recovery=6 as a last resort;
--source include/search_pattern.inc

--remove_file $SEARCH_FILE

let MYSQLD_EXTRA_ARGS = --debug='d,log_header_checksum_disabled';

# Now, let's assume that the invalid checkpoint_lsn was written by broken InnoDB instance (so header has valid checksum)
--error 1,42
--exec $MYSQLD_CMD $MYSQLD_ARGS $MYSQLD_EXTRA_ARGS --innodb-unknown-param=y > $SEARCH_FILE 2>&1 ;
let SEARCH_PATTERN = Found checkpoint LSN $REDO_NEW_CHECKPOINT_LSN in a redo log file .*, but the file represents range of LSN values .*$REDO_FILE_START_LSN, $REDO_FILE_END_LSN.* so the file is corrupted.;
--replace_result $REDO_NEW_CHECKPOINT_LSN REDO_NEW_CHECKPOINT_LSN $REDO_FILE_START_LSN REDO_FILE_START_LSN $REDO_FILE_END_LSN REDO_FILE_END_LSN
--source include/search_pattern.inc

--remove_file $SEARCH_FILE

--force-rmdir $MYSQLD_DATADIR

let MYSQLD_ARGS=;
let MYSQLD_EXTRA_ARGS=;
let MYSQLD_DATADIR=;
let MYSQLD_ERROR_LOG=;
