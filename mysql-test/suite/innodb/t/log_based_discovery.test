# #########################################################
# wl7806 : This testcase will test the functionality of
# DB inconsistency check for ibdata* and undo* files.
# Create 2 DBs datadir1 & datadir2 in different paths
# Create ibdata* files and undo* files in different paths
# Crash the datadir1 DB server
# Swap the undo file path of the datadir1 to datadir2
# Try to restrat the datadir1 server ,expect an error
# #########################################################
--source include/not_embedded.inc
--source include/not_parallel.inc
--source include/linux.inc

let $MYSQLD_BASEDIR= `select @@basedir`;
use mysql;

# Create 2 different paths for ibdata* & undo* files both DBs
--mkdir $MYSQL_TMP_DIR/innodb_undo_data_dir1
--mkdir $MYSQL_TMP_DIR/innodb_undo_data_dir2
--mkdir $MYSQL_TMP_DIR/innodb_data_home_dir1
--mkdir $MYSQL_TMP_DIR/innodb_data_home_dir2
--mkdir $MYSQL_TMP_DIR/datadir1
--mkdir $MYSQL_TMP_DIR/datadir2
--mkdir $MYSQL_TMP_DIR/datadir1/data
--mkdir $MYSQL_TMP_DIR/datadir2/data

# Set 2 different paths for --datadir
let $MYSQLD_DATADIR1 = $MYSQL_TMP_DIR/datadir1/data;
let $MYSQLD_DATADIR2 = $MYSQL_TMP_DIR/datadir2/data;

# Set 2 different paths for ibdata* files.
let $MYSQLD_UNDO_DATADIR1 = $MYSQL_TMP_DIR/innodb_undo_data_dir1;
let $MYSQLD_UNDO_DATADIR2 = $MYSQL_TMP_DIR/innodb_undo_data_dir2;

# Set 2 different paths for undo* files.
let $MYSQLD_DATA_HOME_DATA_DIR1 = $MYSQL_TMP_DIR/innodb_data_home_dir1;
let $MYSQLD_DATA_HOME_DATA_DIR2 = $MYSQL_TMP_DIR/innodb_data_home_dir2;

# Create a bootstrap file in temp location
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
--exec echo $MYSQLTEST_VARDIR/tmp/bootstrap.log

--echo # Stop server MTR default DB server
--source include/shutdown_mysqld.inc

# Set the bootstrap parameters for datadir1
let NEW_CMD = $MYSQLD --no-defaults --initialize --innodb_data_home_dir=$MYSQLD_DATA_HOME_DATA_DIR1 --innodb_undo_directory=$MYSQLD_UNDO_DATADIR1 --innodb_undo_tablespaces=5 --basedir=$MYSQLD_BASEDIR --datadir=$MYSQLD_DATADIR1 --skip-grant-tables</dev/null>>$MYSQLTEST_VARDIR/tmp/bootstrap.log 2>&1;

--echo # Run the bootstrap command of datadir1
--exec $NEW_CMD

--echo # Start the DB server with datadir1
--exec echo "restart: --innodb_undo_tablespaces=5 --innodb_data_home_dir=$MYSQLD_DATA_HOME_DATA_DIR1 --innodb_undo_directory=$MYSQLD_UNDO_DATADIR1 --datadir=$MYSQLD_DATADIR1 --skip-grant-tables" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

CREATE DATABASE test;
USE test;

CREATE TABLE tab1(c1 INT, c2 VARCHAR(30));

INSERT INTO tab1 VALUES(1, 'Test consistency undo*');

SELECT * FROM tab1;
USE mysql;

--echo # Abruptly stop the DB server with datadir1
--source include/kill_mysqld.inc

# Set the bootstrap parameters for datadir2
let NEW_CMD = $MYSQLD --no-defaults --initialize --innodb_data_home_dir=$MYSQLD_DATA_HOME_DATA_DIR2 --innodb_undo_directory=$MYSQLD_UNDO_DATADIR2 --innodb_undo_tablespaces=5 --basedir=$MYSQLD_BASEDIR --datadir=$MYSQLD_DATADIR2 --skip-grant-tables</dev/null>>$MYSQLTEST_VARDIR/tmp/bootstrap.log 2>&1;

--echo # Run the bootstrap command of datadir2
--exec $NEW_CMD

--echo # Start the DB server with datadir2
-- exec echo "restart: --innodb_undo_tablespaces=5 --innodb_data_home_dir=$MYSQLD_DATA_HOME_DATA_DIR2 --innodb_undo_directory=$MYSQLD_UNDO_DATADIR2 --datadir=$MYSQLD_DATADIR2 --skip-grant-tables" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

CREATE DATABASE test;
USE test;

CREATE TABLE tab2(c1 INT, c2 VARCHAR(30));

INSERT INTO tab2 VALUES(1, 'Test consistency undo*');

SELECT * FROM tab2;
USE mysql;

--echo # Stop the DB server with datadir2
--source include/shutdown_mysqld.inc

# swap the undo* file path of datadir1 to datadir2 (interchange)
let NEW_CMD = $MYSQLD --no-defaults --innodb_data_home_dir=$MYSQLD_DATA_HOME_DATA_DIR1 --innodb_undo_directory=$MYSQLD_UNDO_DATADIR2 --innodb_undo_tablespaces=5 --basedir=$MYSQLD_BASEDIR --datadir=$MYSQLD_DATADIR1 --skip-grant-tables</dev/null>>$MYSQLTEST_VARDIR/tmp/wl7806.err 2>&1;

--echo # Start the DB1 server with wrong path of undo tablespaces, expect an recovery errors
--error 1
--exec $NEW_CMD

# Search for particular error
let SEARCH_FILE= $MYSQLTEST_VARDIR/tmp/wl7806.err;
let SEARCH_PATTERN= \[ERROR\] InnoDB: Cannot load UNDO tablespace;
--source include/search_pattern_in_file.inc
--remove_file $MYSQLTEST_VARDIR/tmp/wl7806.err

# swap the ibdata* file path of datadir1 to datadir2 (interchange)
let NEW_CMD = $MYSQLD --no-defaults --innodb_data_home_dir=$MYSQLD_DATA_HOME_DATA_DIR2 --innodb_undo_directory=$MYSQLD_UNDO_DATADIR1 --innodb_undo_tablespaces=5 --basedir=$MYSQLD_BASEDIR --datadir=$MYSQLD_DATADIR1 --skip-grant-tables</dev/null>>$MYSQLTEST_VARDIR/tmp/wl7806.err 2>&1;

--echo # Start the DB1 server with wrong path of ibdata* tablespaces, expect an recovery errors
--error 1
--exec $NEW_CMD

# Search for perticular error
let SEARCH_FILE= $MYSQLTEST_VARDIR/tmp/wl7806.err;
let SEARCH_PATTERN= \[ERROR\] InnoDB: Redo log refers to system tablespace file;
--source include/search_pattern_in_file.inc
--remove_file $MYSQLTEST_VARDIR/tmp/wl7806.err

--echo # Start the DB server with right path, expect no recovery errors
--exec echo "restart: --innodb_undo_tablespaces=5 --innodb_data_home_dir=$MYSQLD_DATA_HOME_DATA_DIR1 --innodb_undo_directory=$MYSQLD_UNDO_DATADIR1 --datadir=$MYSQLD_DATADIR1 --skip-grant-tables" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

USE test;
# Check datadir1 consistency
--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
SELECT @@innodb_undo_tablespaces;

--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
SELECT @@innodb_data_home_dir;

--replace_result $MYSQL_TMP_DIR MYSQL_TMP_DIR
SELECT @@innodb_undo_directory;

SELECT * FROM tab1;
# Cleanup
DROP TABLE tab1;
USE mysql;

--echo # Stop the DB server with datadir1
--source include/shutdown_mysqld.inc

--echo # Start the DB server with datadir2 for cleanup
-- exec echo "restart: --innodb_undo_tablespaces=5 --innodb_data_home_dir=$MYSQLD_DATA_HOME_DATA_DIR2 --innodb_undo_directory=$MYSQLD_UNDO_DATADIR2 --datadir=$MYSQLD_DATADIR2 --skip-grant-tables" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect
--enable_reconnect
--source include/wait_until_connected_again.inc
--disable_reconnect

USE test;

SELECT * FROM tab2;

# Cleanup
DROP TABLE tab2;

# The following lines of code just to dupe the MTR frame work nothing to do with WL,
# As MTR thinks that it was a failure, When the server logs contains error/warnings
# even though there are no result mismatch.It is an expected behavior of the server.
CREATE DATABASE mtr;

USE mtr;

DELIMITER |;
CREATE PROCEDURE mtr.check_warnings(OUT result INT)
BEGIN
SELECT 0 INTO RESULT;
END|
