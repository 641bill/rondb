--source include/not_embedded.inc
--source include/have_innodb.inc
--source include/have_debug.inc
--source include/have_innodb_16k.inc

--echo # We want to test if corrupted redo logs generated by logging corrupted
--echo # indexes can be handled well

let $MYSQLD_DATADIR=`select @@datadir`;

let $_server_id= `SELECT @@server_id`;
let $_expect_file_name= $MYSQLTEST_VARDIR/tmp/mysqld.$_server_id.expect;

CREATE TABLE t1 (a INT NOT NULL PRIMARY KEY, b INT);
INSERT INTO t1 VALUES(1, 2), (2, 4), (3, 6);

--echo # Mark clustered index as corrupted, so that we will get the corrupted redo logs
set debug="+d, dict_set_clust_index_corrupted";
set debug="+d, meta_log_corrupted";
--error 2013
CHECK TABLE t1;

let newdir = $MYSQLTEST_VARDIR/tmp/innodb-log-debug-1;
--exec echo "wait" > $MYSQLTEST_VARDIR/tmp/mysqld.1.expect

--mkdir $newdir
let SEARCH_FILE = $newdir/my_restart.err;
--copy_file $MYSQLD_DATADIR/ibdata1 $newdir/ibdata1
--copy_file $MYSQLD_DATADIR/ib_logfile0 $newdir/ib_logfile0
--copy_file $MYSQLD_DATADIR/ib_logfile1 $newdir/ib_logfile1

# We must set '--secure-file-priv=""' here, in case that it will fail on some
# platform sporadically
let $args=--no-defaults --datadir=$newdir --secure-file-priv="" --loose-console > $SEARCH_FILE 2>&1 ;

--error 0,1
--exec $MYSQLD $args

--echo # Matching the server logs for corrupted redo logs
let SEARCH_PATTERN=InnoDB: ############### CORRUPT LOG RECORD FOUND ##################;
--source include/search_pattern_in_file.inc
let SEARCH_PATTERN=InnoDB: Hex dump starting .* bytes before and ending .* bytes after the corrupted record;
--source include/search_pattern_in_file.inc
let SEARCH_PATTERN=InnoDB: Set innodb_force_recovery to ignore this error;
--source include/search_pattern_in_file.inc

--remove_file $SEARCH_FILE
--remove_file $newdir/ibdata1
--remove_file $newdir/ib_logfile0
--remove_file $newdir/ib_logfile1
--rmdir $newdir

# Restart the server and clean up
let $restart_parameters = restart: --debug=d,meta_log_corrupted;
--source include/start_mysqld.inc

set debug="-d, meta_log_corrupted";

DROP TABLE t1;
