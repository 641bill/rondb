#
# WL#6737:  InnoDB: Enabling InnoDB temp-tables as default internal SE for
#	    MySQL Optimizer
#

--source include/have_innodb.inc
--source include/no_valgrind_without_big.inc
--source include/not_embedded.inc

# Optimizer plan are printed as part of the test-case and changing page
# size will affect the optimizer plan numbers. so enable it only for 16K
--source include/have_innodb_16k.inc


################################################################################
#
# Workload will run following scenarios
# 1. Execute different kind of queries using InnoDB as temp-tables
#
################################################################################

#-----------------------------------------------------------------------------
#
# create test bed.
#
##--disable_query_log
let $wl6737_auto_inc = auto_increment;
--source suite/innodb/include/create_workload_itt.inc
##--enable_query_log

#-----------------------------------------------------------------------------
#
# Workload in non-read-only mode.
#
--source suite/innodb/include/query_workload_itt.inc

#-----------------------------------------------------------------------------
#
# Workload in read-only mode.
#
let $restart_parameters = restart: --innodb-read-only --big-tables=1;
--source include/restart_mysqld.inc

--source suite/innodb/include/query_workload_itt.inc

let $restart_parameters = restart;
--source include/restart_mysqld.inc

#------------------------------------------------------------------------------
#
# make sure intrinsic table open and close doesn't affect monitoring count.
#
set global innodb_monitor_enable = metadata_table_reference_count;
set global innodb_monitor_reset = metadata_table_reference_count;
select name, count, status from information_schema.innodb_metrics where name like 'metadata%';
#
create table t (a int, b varchar(20)) engine=innodb STATS_PERSISTENT=0;
create temporary table tt (a int, b varchar(20)) engine=innodb STATS_PERSISTENT=0;
#
insert into t values(1, 'a'), (2, 'b'), (3, 'c'), (3, 'c'), (4, 'c');
insert into tt values(1, 'a'), (2, 'b'), (3, 'c'), (3, 'c'), (4, 'c');
#
select name, count, status from information_schema.innodb_metrics where name like 'metadata%';
set big_tables = 1;
select sql_buffer_result * from t;
select sql_buffer_result * from tt;
select name, count, status from information_schema.innodb_metrics where name like 'metadata%';
#
drop table t;
drop table tt;
#
select name, count, status from information_schema.innodb_metrics where name like 'metadata%';
set global innodb_monitor_reset = metadata_table_reference_count;
set global innodb_monitor_disable = metadata_table_reference_count;
--disable_warnings
set global innodb_monitor_enable = default;
set global innodb_monitor_disable = default;
set global innodb_monitor_reset = default;
set global innodb_monitor_reset_all = default;
--enable_warnings


#-----------------------------------------------------------------------------
#
# remove test bed.
#

--source suite/innodb/include/drop_workload_itt.inc
