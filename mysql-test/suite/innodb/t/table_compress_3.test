#------------------------------------------------------------------------------
# Purpose of test : Test transparent page level compression in the IO layer.
# wl7696: InnoDB: Transparent page compression
# Test checks
# - if hole punching is available (if not then skip test) 
# - create table and do DML and DDL
# - Check if compression is correct
#------------------------------------------------------------------------------
--source include/not_embedded.inc
--source include/have_innodb.inc
--source include/no_valgrind_without_big.inc

# # Avoid CrashReporter popup on Mac
--source include/not_crashrep.inc

let $fpt= `select @@innodb_file_per_table`;
SET GLOBAL innodb_file_per_table=1;

let MYSQLD_DATADIR= `select @@datadir`;

--let $db= test
--let $i_s_table= information_schema.innodb_sys_tablespaces

### create zlib compressed table and check if hole punching is supported
--let $table_zlib= tc_zlib
--disable_warnings
eval DROP TABLE IF EXISTS $db.$table_zlib;
eval CREATE TABLE $db.$table_zlib (t LONGTEXT) COMPRESSION='zlib';
--let COMPR_ZIP_WARN= `SHOW WARNINGS`
--enable_warnings

perl;
  use strict;
  my $no_holes = ($ENV{COMPR_ZIP_WARN} =~ /Punch hole not supported/)? 1 : 0;
### we do not expect any other warning
  printf("Unexpected warning: %s\n",$ENV{COMPR_ZIP_WARN})
    if (not $no_holes and $ENV{COMPR_ZIP_WARN} ne '');
  open(DHF,">$ENV{'MYSQLD_DATADIR'}/tc.inc");
  printf DHF "let \$no_holes= %s;\n",$no_holes;
  close(DHF);
EOF
--source $MYSQLD_DATADIR/tc.inc
--remove_file $MYSQLD_DATADIR/tc.inc
if ($no_holes)
{
  eval DROP TABLE IF EXISTS $db.$table_zlib;
  eval SET GLOBAL innodb_file_per_table=$fpt;
  skip needs DATADIR on fs that supports hole punching, or innodb_page_size is too small;
}

### create lz4 compressed tables
--let $table_lz4= tc_lz4
--disable_warnings
eval DROP TABLE IF EXISTS $db.$table_lz4;
--enable_warnings
eval CREATE TABLE $db.$table_lz4 (t LONGTEXT) COMPRESSION='lz4';

eval INSERT INTO $db.$table_zlib VALUES (REPEAT('z',142857));
eval INSERT INTO $db.$table_lz4 VALUES (REPEAT('4',142857));
COMMIT;

--let COMPR_TABLES= $db/$table_zlib,$db/$table_lz4

### check if the tables are compressed
--let COMPR_EXPECT= 1,1
--source include/innodb-compress-verify.inc

### alter to comression 'none', check the tables are not compressed
### after OPTIMIZE but not before
eval ALTER TABLE $db.$table_zlib COMPRESSION='none';
eval ALTER TABLE $db.$table_lz4 COMPRESSION='none';
--let COMPR_EXPECT= 1,1
--source include/innodb-compress-verify.inc
eval OPTIMIZE TABLE $db.$table_zlib;
eval OPTIMIZE TABLE $db.$table_lz4;
--let COMPR_EXPECT= 0,0
--source include/innodb-compress-verify.inc

### alter back to compressed, optimize, verify
eval ALTER TABLE $db.$table_zlib COMPRESSION='lz4';
eval ALTER TABLE $db.$table_lz4 COMPRESSION='zlib';
--let COMPR_EXPECT= 0,0
--source include/innodb-compress-verify.inc
eval OPTIMIZE TABLE $db.$table_zlib;
eval OPTIMIZE TABLE $db.$table_lz4;
--let COMPR_EXPECT= 1,1
--source include/innodb-compress-verify.inc
eval ALTER TABLE $db.$table_zlib COMPRESSION='zlib';
eval ALTER TABLE $db.$table_lz4 COMPRESSION='lz4';
--let COMPR_EXPECT= 1,1
--source include/innodb-compress-verify.inc
eval OPTIMIZE TABLE $db.$table_zlib;
eval OPTIMIZE TABLE $db.$table_lz4;
--let COMPR_EXPECT= 1,1
--source include/innodb-compress-verify.inc

### cannot create a compressed table in shared tablespace
--replace_regex /'.*'/'LOCATION'/
eval CREATE TABLESPACE tbs1 ADD DATAFILE '$MYSQLD_DATADIR/tbs1.ibd' ENGINE InnoDB;
--let $innodb_page_size= `SELECT @@innodb_page_size`
--let $blockbit= FILE_BLOCK_SIZE=2048
if ($innodb_page_size > 17000)
{
  --let $blockbit=
}
--replace_regex /'.*/'LOCATION' OPTIONAL_FILE_BLOCK_SIZE_CLAUSE/
eval CREATE TABLESPACE tbs2k ADD DATAFILE '$MYSQLD_DATADIR/tbs2k.ibd' $blockbit;
--error 1112
eval CREATE TABLE $db.t1 (x INTEGER) COMPRESSION='zlib' TABLESPACE=innodb_system;
--error 1112
eval CREATE TABLE $db.t1 (x INTEGER) COMPRESSION='zlib' TABLESPACE=tbs1;
--error 1478,1112
eval CREATE TABLE $db.t1 (x INTEGER) COMPRESSION='lz4' TABLESPACE=tbs2k;
--error 1031,1478
eval CREATE TABLE $db.t1 (x INTEGER) KEY_BLOCK_SIZE=2 COMPRESSION='lz4' TABLESPACE=tbs2k;

### can do it in innodb_file_per_table
SET GLOBAL innodb_file_per_table=0;
eval CREATE TABLE $db.t1 (x INTEGER) COMPRESSION='lz4' TABLESPACE=innodb_file_per_table;
eval ALTER TABLE $db.t1 COMPRESSION='zlib' TABLESPACE=innodb_file_per_table;
eval DROP TABLE $db.t1;
SET GLOBAL innodb_file_per_table=1;

### ALTER into shared tablespaces and back will lose then restore compression
#eval ALTER TABLE $db.$table_zlib TABLESPACE=tbs1;
eval ALTER TABLE $db.$table_lz4 TABLESPACE=innodb_system;
eval ALTER TABLE $db.$table_zlib TABLESPACE=innodb_file_per_table;
eval ALTER TABLE $db.$table_lz4 TABLESPACE=innodb_file_per_table;
--let COMPR_EXPECT= 1,1
--source include/innodb-compress-verify.inc

### cannot use transparent page compression with existing zip compression
--error 1031
eval CREATE TABLE $db.t1 (x INTEGER) KEY_BLOCK_SIZE=2 COMPRESSION='lz4';
--error 1031
eval CREATE TABLE $db.t1 (x INTEGER) KEY_BLOCK_SIZE=1 ROW_FORMAT=COMPRESSED COMPRESSION='zlib';
let $innodb_strict_mode= `SELECT @@innodb_strict_mode`;
SET SESSION innodb_strict_mode=0;
--disable_warnings
eval CREATE TABLE $db.tk1 (x LONGTEXT) KEY_BLOCK_SIZE=1 ROW_FORMAT=COMPRESSED COMPRESSION='none';
--enable_warnings
eval SET SESSION innodb_strict_mode=$innodb_strict_mode;
### Problematic error code
###eval ALTER TABLE $db.tk1 COMPRESSION='lz4';
eval DROP TABLE IF EXISTS $db.tk1;

### do some DDL and DML
eval CREATE TABLE $db.ttbs1 (x LONGTEXT) TABLESPACE=tbs1;
eval CREATE TABLE $db.t1 (x LONGTEXT) TABLESPACE=innodb_file_per_table;
SET SESSION autocommit=1;
eval INSERT INTO $db.$table_lz4 VALUES (REPEAT('4',142857));
eval INSERT INTO $db.$table_zlib VALUES (REPEAT('z',142857));
eval INSERT INTO $db.t1 VALUES (REPEAT('1',142857));
eval INSERT INTO $db.ttbs1 VALUES (REPEAT('s',142857));
eval DELETE FROM $db.$table_lz4;
eval DELETE FROM $db.ttbs1;
ROLLBACK;
eval INSERT INTO $db.$table_lz4 VALUES (REPEAT('4',142857));
eval INSERT INTO $db.$table_zlib VALUES (REPEAT('z',142857));
eval INSERT INTO $db.ttbs1 VALUES (REPEAT('s',142857));
eval INSERT INTO $db.t1 VALUES (REPEAT('11',142857));
COMMIT;
eval FLUSH TABLES $db.t1, $db.$table_lz4, $db.$table_zlib WITH READ LOCK;
UNLOCK TABLES;
FLUSH ENGINE LOGS;
FLUSH TABLES;

### check system tablespace etc for unwanted compression
### we do not include shared user created tablespaces nor user created 
### tables, they tend to appear compressed a little
perl;
  use strict;
  do 'include/innodb-compress-utils.inc';
  use warnings;

  my @lc = sort(split(/\s*,\s*/,$ENV{'COMPR_TABLES'}));
  dir_compression_verify($ENV{'MYSQLD_DATADIR'},
    {
      compr => \@lc,
      nc => ['ib_log*','ibdata*','ibtmp*'],
    });
EOF

### cleanup
--disable_warnings
eval DROP TABLE IF EXISTS $db.$table_zlib;
eval DROP TABLE IF EXISTS $db.$table_lz4;
eval DROP TABLE IF EXISTS $db.t1;
eval DROP TABLE IF EXISTS $db.ttbs1;
DROP TABLESPACE tbs1;
DROP TABLESPACE tbs2k;
--enable_warnings
eval SET GLOBAL innodb_file_per_table=$fpt;
