

## I. Validate multiple compression-configuration changes
#
# 1. Set first lz4, then deflte, and verify that deflate is the final algorithm that server uses
# 2. Set first lz4, then deflte, and verify that deflate is the final algorithm that client uses
# 3. Set first client_style, then server_style, and verify that server uses compression and it
#    doesn't accept compressed data from the client
# 4. Set first server_style, then clinet_style, and verify that server doesn't use compression
#    and it accepts compressed data from the client

## II. Verify that compression is not used before authentication
#
# 1. Enable compression, send compressed frame before authentication
# 2. Enable compression, check that server didn't send any compressed frames before authentication


#
# I.1
connecting...
active session is now 's1.1'
##########################################################
## Scenario: algorithm=lz4, server_style=group
##########################################################
## Scenario: algorithm=deflate, server_style=multiple
Login OK
RUN SELECT 1
1
1
0 rows affected
# Asserting [ Mysqlx_bytes_sent_compressed_payload	>	0 ]
Verify ["SELECT VARIABLE_VALUE > 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_sent_compressed_payload'" returns in first column, following value 1]
# Asserting [ Mysqlx_bytes_received_compressed_payload	=	0 ]
Verify ["SELECT VARIABLE_VALUE = 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_received_compressed_payload'" returns in first column, following value 1]

#
# I.2
connecting...
active session is now 's1.2'
##########################################################
## Scenario: algorithm=lz4, client_style=group
##########################################################
## Scenario: algorithm=deflate, client_style=single
Login OK
1
1
0 rows affected
# Asserting [ Mysqlx_bytes_sent_compressed_payload	=	0 ]
Verify ["SELECT VARIABLE_VALUE = 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_sent_compressed_payload'" returns in first column, following value 1]
# Asserting [ Mysqlx_bytes_received_compressed_payload	>	0 ]
Verify ["SELECT VARIABLE_VALUE > 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_received_compressed_payload'" returns in first column, following value 1]

#
# I.3
connecting...
active session is now 's1.3'
##########################################################
## Scenario: algorithm=lz4, client_style=single
##########################################################
## Scenario: algorithm=lz4, server_style=group
Login OK
RUN SELECT 1
1
1
0 rows affected
# Asserting [ Mysqlx_bytes_sent_compressed_payload	>	0 ]
Verify ["SELECT VARIABLE_VALUE > 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_sent_compressed_payload'" returns in first column, following value 1]
# Asserting [ Mysqlx_bytes_received_compressed_payload	=	0 ]
Verify ["SELECT VARIABLE_VALUE = 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_received_compressed_payload'" returns in first column, following value 1]
Got expected error: Client didn't enable "single" compression. (code 5170)
closing session s1.3
switched to session default

#
# I.4
connecting...
active session is now 's1.4'
##########################################################
## Scenario: algorithm=lz4, server_style=group
##########################################################
## Scenario: algorithm=lz4, client_style=single
Login OK
1
1
0 rows affected
# Asserting [ Mysqlx_bytes_received_compressed_payload	>	0 ]
Verify ["SELECT VARIABLE_VALUE > 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_received_compressed_payload'" returns in first column, following value 1]
# Asserting [ Mysqlx_bytes_sent_compressed_payload	=	0 ]
Verify ["SELECT VARIABLE_VALUE = 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_sent_compressed_payload'" returns in first column, following value 1]

#
# II.1
connecting...
active session is now 's2.1'
##########################################################
## Scenario: algorithm=lz4, client_style=single
Got expected error:
Mysqlx.Error {
  severity: FATAL
  code: 5170
  msg: "Client didn\'t enable the compression."
  sql_state: "HY000"
}

closing session s2.1
switched to session default

#
# II.2
connecting...
active session is now 's2.2'
##########################################################
## Scenario: algorithm=lz4, server_style=group
Login OK
# Asserting [ Mysqlx_bytes_sent_compressed_payload	=	0 ]
Verify ["SELECT VARIABLE_VALUE = 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_sent_compressed_payload'" returns in first column, following value 1]
# Asserting [ Mysqlx_bytes_received_compressed_payload	=	0 ]
Verify ["SELECT VARIABLE_VALUE = 0 FROM performance_schema.session_status WHERE VARIABLE_NAME LIKE 'Mysqlx_bytes_received_compressed_payload'" returns in first column, following value 1]
closing session s2.2
Mysqlx.Ok {
  msg: "bye!"
}
ok
