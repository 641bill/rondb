## Test per-user-account lock
#

## Preamble
--source include/xplugin_preamble.inc
--source include/xplugin_create_user.inc

--let $MYSQLXTEST_CHECK_FOO= $MYSQLXTEST --mysql41-auth -ufoo --password='' --sql="SELECT current_user() AS 'user check'"


call mtr.add_suppression('Can not read and process value of User_attributes column from mysql.user table for user');


--echo #
--echo #
--echo # Test of external user attributes update
--echo #

CREATE USER foo@localhost IDENTIFIED BY 'foo';

--echo # Should pass
--exec $MYSQLXTEST_CHECK_FOO --password='foo' 2>&1

--echo # Should fail
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR 2>&1

--echo # Should fail with the same error
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR 2>&1

UPDATE mysql.user SET user_attributes='{"Password_locking": {"failed_login_attempts": 2, "password_lock_time_days": 2}}' WHERE user='foo';
FLUSH PRIVILEGES;

--echo # Should still fail with policy
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # FR5: Should still fail with policy because of locked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

DROP USER foo@localhost;



--echo #
--echo #
--echo # Test of IDENTIFIED BY and FLUSH PRIVILEGES
--echo #

CREATE USER foo@localhost IDENTIFIED BY 'foo' FAILED_LOGIN_ATTEMPTS 4 PASSWORD_LOCK_TIME 6;
ALTER USER foo@localhost FAILED_LOGIN_ATTEMPTS 2;
ALTER USER foo@localhost PASSWORD_LOCK_TIME 3;

--echo # Should fail with policy
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # Should still fail with policy because of locked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

ALTER USER foo@localhost IDENTIFIED BY 'foo';

--echo # Should fail locked even after ALTER USER
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

FLUSH PRIVILEGES;

--echo # Should fail unlocked after FLUSH PRIVILEGES
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # Should still fail with policy because of locked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

--echo # Successful login doesn't work when account is locked.
--exec $MYSQLXTEST_CHECK_FOO --password='foo' --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1


--echo #
--echo #
--echo # Test of ACCOUNT UNLOCK will remove the password failed lock too.
--echo #

ALTER USER foo@localhost ACCOUNT UNLOCK;

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # we lock foo user account
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

DROP USER foo@localhost;



--echo #
--echo #
--echo # Test of altering FAILED_LOGIN_ATTEMPTS and PASSWORD_LOCK_TIME equal 0
--echo #

CREATE USER foo@localhost IDENTIFIED BY 'foo' FAILED_LOGIN_ATTEMPTS 2 PASSWORD_LOCK_TIME 3;

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # we lock foo user account
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

ALTER USER foo@localhost FAILED_LOGIN_ATTEMPTS 0;

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR 2>&1

--echo # Should fail as unlocked: tracking turned off by login attempts 0
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR 2>&1

ALTER USER foo@localhost FAILED_LOGIN_ATTEMPTS 2 PASSWORD_LOCK_TIME 0;

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR 2>&1

--echo # Should fail as unlocked: tracking turned off by password lock time 0
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR 2>&1

DROP USER foo@localhost;



--echo #
--echo #
--echo # Test of altering FAILED_LOGIN_ATTEMPTS and PASSWORD_LOCK_TIME
--echo #

CREATE USER foo@localhost IDENTIFIED BY 'foo' FAILED_LOGIN_ATTEMPTS 2 PASSWORD_LOCK_TIME 3;

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # we lock foo user account
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

ALTER USER foo@localhost FAILED_LOGIN_ATTEMPTS 2;

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # Should fail as locked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

ALTER USER foo@localhost PASSWORD_LOCK_TIME 3;

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # Should fail as locked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

DROP USER foo@localhost;



--echo #
--echo #
--echo # Test of a successful login resets the failed count
--echo #

CREATE USER foo@localhost IDENTIFIED BY 'foo' FAILED_LOGIN_ATTEMPTS 2 PASSWORD_LOCK_TIME 3;

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # Should pass
--exec $MYSQLXTEST_CHECK_FOO --password='foo' 2>&1

--echo # Should fail as unlocked: the first failure count removed by a connect
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # Should fail as locked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

DROP USER foo@localhost;


--echo #
--echo #
--echo # Test of password auto-lock and account lock
--echo #

CREATE USER foo@localhost IDENTIFIED BY 'foo' FAILED_LOGIN_ATTEMPTS 2 PASSWORD_LOCK_TIME 3 ACCOUNT LOCK;

--echo # Should fail with account locked
--exec $MYSQLXTEST_CHECK_FOO --password='foo' --expect-error=ER_ACCOUNT_HAS_BEEN_LOCKED 2>&1

--echo # Should fail with access denied
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # FR6: Should still fail with policy because of locked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

DROP USER foo@localhost;


--echo #
--echo #
--echo # Test of check locking and proxies
--echo #

--let $MYSQLXTEST_CHECK_PROXY= $MYSQLXTEST --mysql41-auth -uproxy_foo --password='' --sql="SELECT current_user() AS 'user check'"

SET GLOBAL check_proxy_users = ON;
SET GLOBAL mysql_native_password_proxy_users = ON;
CREATE USER foo@localhost IDENTIFIED BY 'foo' FAILED_LOGIN_ATTEMPTS 2 PASSWORD_LOCK_TIME 3;
CREATE USER proxy_foo@localhost IDENTIFIED BY 'proxy_foo' FAILED_LOGIN_ATTEMPTS 2 PASSWORD_LOCK_TIME 3;
GRANT PROXY ON foo@localhost TO proxy_foo@localhost;


--echo # Should pass
--exec $MYSQLXTEST_CHECK_PROXY --password='proxy_foo' 2>&1

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_PROXY --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # Should fail as locked
--exec $MYSQLXTEST_CHECK_PROXY --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

--echo # Should pass: only proxy is locked
--exec $MYSQLXTEST_CHECK_FOO --password='foo' 2>&1
--echo # Should fail as unlocked: different user locked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

REVOKE PROXY ON foo@localhost FROM proxy_foo@localhost;
DROP USER foo@localhost, proxy_foo@localhost;
SET GLOBAL check_proxy_users = DEFAULT;
SET GLOBAL mysql_native_password_proxy_users = DEFAULT;



--echo #
--echo #
--echo # Test of ALTER USER ... ACCOUNT UNLOCK
--echo #

CREATE USER foo@localhost IDENTIFIED BY 'foo' FAILED_LOGIN_ATTEMPTS 2 PASSWORD_LOCK_TIME 2;

--echo # Should fail as unlocked
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_ACCESS_DENIED_ERROR_WITH_PASSWORD 2>&1

--echo # we lock foo user account
--exec $MYSQLXTEST_CHECK_FOO --expect-error=ER_USER_ACCESS_DENIED_FOR_USER_ACCOUNT_BLOCKED_BY_PASSWORD_LOCK 2>&1

ALTER  USER   foo@localhost /* ACCOUNT LOCK */   ACCOUNT        UNLOCK;

--echo # Should pass
--exec $MYSQLXTEST_CHECK_FOO  --password='foo' 2>&1

DROP USER foo@localhost;


## Cleanup
--source include/xplugin_drop_user.inc
