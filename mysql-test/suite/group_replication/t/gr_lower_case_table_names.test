################################################################################
## This test proves that group replication does not start on server when it's
## lower_case_table_names does not match with the group.
##
## Test:
## 0.  This test requires 2 members.
## 1.  Verify lower_case_table_names cannot be set while server is
##     running and start GR on server-1.
## 2.  Store variables of server-2 for restart.
## 3.  Test GR start on server when lower_case_table_names matches.
## 3A. Test GR start with command when lower_case_table_names matches.
## 3B. Test GR start on boot when lower_case_table_names matches.
## 4.  Test GR does not start on server when lower_case_table_names
##     does not match.
## 4A. Test GR does not start on boot when lower_case_table_names
##     does not match.
## 4B. Test GR does not start with command when lower_case_table_names
##     does not match.
## 5.  Cleanup.
################################################################################

--source include/big_test.inc
--source include/have_group_replication_plugin.inc
--let $rpl_skip_group_replication_start= 1
--source include/group_replication.inc
--source include/force_restart.inc

--let $allow_rpl_inited=1

--echo
--echo ## 1.  Verify lower_case_table_names cannot be set while server is
--echo ##     running and start GR on server-1.
--echo
--let $rpl_connection_name= server1
--source include/rpl_connection.inc

## Verify lower_case_table_names cannot be set while server is running.
## This make sures we do not need to test variable changes while GR is running.
--error ER_INCORRECT_GLOBAL_LOCAL_VAR
SET GLOBAL lower_case_table_names= 1;

--source include/start_and_bootstrap_group_replication.inc

--echo
--echo ## 2.  Store variables of server-2 for restart.
--echo
--let $rpl_connection_name= server2
--source include/rpl_connection.inc

--let $_group_replication_local_address= `SELECT @@GLOBAL.group_replication_local_address`
--let $_group_replication_group_seeds= `SELECT @@GLOBAL.group_replication_group_seeds`

set session sql_log_bin=0;
call mtr.add_suppression("The member is configured with a lower_case_table_names option value .*");
call mtr.add_suppression("lower_case_table_names was set to 2, .*");
set session sql_log_bin=1;

--echo
--echo ## 3A. Test GR start with command when lower_case_table_names matches.
--echo
--source include/start_group_replication.inc

--let $assert_text= 'Assert server-1 and server-2 are ONLINE'
--let $assert_cond= "[SELECT COUNT(*) from performance_schema.replication_group_members WHERE MEMBER_STATE=\"ONLINE\"]" = 2
--source include/assert.inc

--echo
--echo ## 3B. Test GR start on boot when lower_case_table_names matches.
--echo
--let $restart_parameters=restart:--group_replication_start_on_boot=1 --group_replication_local_address=$_group_replication_local_address --group_replication_group_seeds=$_group_replication_group_seeds --group_replication_group_name=$group_replication_group_name --lower_case_table_names=1
--replace_result $group_replication_group_name GROUP_REPLICATION_GROUP_NAME $_group_replication_local_address GROUP_REPLICATION_LOCAL_ADDRESS $_group_replication_group_seeds GROUP_REPLICATION_GROUP_SEEDS
--source include/restart_mysqld.inc

#Needed as we are not using rpl_restart_server.inc
--let $rpl_server_number= 2
--source include/rpl_reconnect.inc

--let $wait_condition= SELECT COUNT(*) = 2 FROM performance_schema.replication_group_members WHERE MEMBER_STATE="ONLINE"
--source include/wait_condition.inc

--echo
--echo ## 4A. Test GR does not start on boot when lower_case_table_names
--echo ##     does not match.
--echo

# Since we cannot change lower_case_table_names in a server restart, we need to initialize a new datadir
# and restart the server using the new datadir.

let BASEDIR=    `select @@basedir`;
let DDIR=       $MYSQL_TMP_DIR/lctn_test;
let MYSQLD_LOG= $MYSQL_TMP_DIR/server.log;
let extra_args= --no-defaults --secure-file-priv="" --datadir=$DDIR --innodb_dedicated_server=OFF --log-error=$MYSQLD_LOG --log-syslog=0 --loose-skip-auto_generate_certs --loose-skip-sha256_password_auto_generate_rsa_keys --skip-ssl --lower_case_table_names=2 --basedir=$BASEDIR --lc-messages-dir=$MYSQL_SHAREDIR;
let BOOTSTRAP_SQL= $MYSQL_TMP_DIR/tiny_bootstrap.sql;

# Create bootstrap file.
write_file $BOOTSTRAP_SQL;
  CREATE SCHEMA test;
EOF

# First start the server with --initialize.
--exec $MYSQLD $extra_args --initialize-insecure --init-file=$BOOTSTRAP_SQL

--let $restart_parameters=restart:--secure-file-priv="" --datadir=$DDIR --group_replication_start_on_boot=1 --group_replication_local_address=$_group_replication_local_address --group_replication_group_seeds=$_group_replication_group_seeds --group_replication_group_name=$group_replication_group_name --lower_case_table_names=2
--replace_result $DDIR DATADIR $group_replication_group_name GROUP_REPLICATION_GROUP_NAME $_group_replication_local_address GROUP_REPLICATION_LOCAL_ADDRESS $_group_replication_group_seeds GROUP_REPLICATION_GROUP_SEEDS
--source include/restart_mysqld.inc

#Needed as we are not using rpl_restart_server.inc
--let $rpl_server_number= 2
--source include/rpl_reconnect.inc

## Wait for server-2 to join group, needed to get group lower_case_table_names
--let $group_replication_number_of_members=2
--source include/gr_wait_for_number_of_members.inc

--let $wait_condition= SELECT COUNT(*) = 1 FROM performance_schema.replication_group_members WHERE MEMBER_STATE="OFFLINE"
--source include/wait_condition.inc

--echo
--echo ## 4B. Test GR does not start with command when lower_case_table_names
--echo ##     does not match.
--echo

--error ER_GROUP_REPLICATION_CONFIGURATION
START GROUP_REPLICATION;

--let $assert_only_after = CURRENT_TEST: group_replication.gr_lower_case_table_names
--let $assert_file= $MYSQLTEST_VARDIR/log/mysqld.2.err
--let $assert_text = Found the expected error about lower_case_table_names
--let $assert_select = The member is configured with a lower_case_table_names option value
--let $assert_count = 2
--source include/assert_grep.inc

--let $assert_text= 'Assert server-2 is OFFLINE'
--let $assert_cond= "[SELECT COUNT(*) from performance_schema.replication_group_members WHERE MEMBER_STATE=\"OFFLINE\"]" = 1
--source include/assert.inc

--echo
--echo ## 5.  Cleanup.
--echo

# Restart against the original datadir.
--let $restart_parameters=restart: --group_replication_start_on_boot=1 --group_replication_local_address=$_group_replication_local_address --group_replication_group_seeds=$_group_replication_group_seeds --group_replication_group_name=$group_replication_group_name --lower_case_table_names=1
--replace_result $group_replication_group_name GROUP_REPLICATION_GROUP_NAME $_group_replication_local_address GROUP_REPLICATION_LOCAL_ADDRESS $_group_replication_group_seeds GROUP_REPLICATION_GROUP_SEEDS
--source include/restart_mysqld.inc

# Needed as we are not using rpl_restart_server.inc
--let $rpl_server_number= 2
--source include/rpl_reconnect.inc

# Delete the datadir used for l_c_t_n = 2.
#   Delete \$DDIR.
--force-rmdir $DDIR
#   Delete sql files.
--remove_files_wildcard $MYSQL_TMP_DIR *.sql
#   Delete log files.
--remove_files_wildcard $MYSQL_TMP_DIR *.log
#   Delete expect files.
--remove_files_wildcard $MYSQL_TMP_DIR *.expect

--source include/group_replication_end.inc
