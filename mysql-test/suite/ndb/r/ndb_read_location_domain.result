use test;
Test read-locality of READ-BACKUP
create table test.t1 (a int primary key,
b int,
c int,
d int,
unique(b) using hash,
key(c),
key(a,c))
comment="NDB_TABLE=READ_BACKUP=1"
  engine=ndb;
Warnings:
Warning	1121	Ndb does not support unique index on NULL valued attributes, index access with NULL value will become full table scan
create table test.t2 (a int primary key,
b int,
c int,
d text,
unique(b) using hash,
key(c))
comment="NDB_TABLE=READ_BACKUP=1"
  engine=ndb;
Warnings:
Warning	1121	Ndb does not support unique index on NULL valued attributes, index access with NULL value will become full table scan
select id into @t1_id from ndbinfo.ndb$dict_obj_info where fq_name = 'test/def/t1';
select id into @t1ui_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t1_id and type = 3;
select id into @t2_id from ndbinfo.ndb$dict_obj_info where fq_name = 'test/def/t2';
select id into @t2ui_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t2_id and type = 3;
select id into @t2bt_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t2_id and fq_name like 'test/def/NDB$BLOB%';
Put some data in.
Make it more interesting for joining
update test.t1 set c=c+1, d=d+1;
select count(distinct node_id) into @nodes
from ndbinfo.ndb$membership where group_id < 0xFFFFFF00;
Check replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where fq_name='test/def/t1'
   and fragment_num=0;
count(distinct node_id)
2
Check nodes with table data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where fq_name='test/def/t1';
count(distinct node_id)
2
Check UI replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t1ui_id
and fragment_num=0;
count(distinct node_id)
2
Check nodes with UI data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t1ui_id;
count(distinct node_id)
2
Put some data in.
insert into test.t2 select a,b,c,repeat('BJC',300) from test.t1;
Check blob table replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t2bt_id
and fragment_num=0;
count(distinct node_id)
2
Check nodes with blob data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t2bt_id;
count(distinct node_id)
2
set @partitions = 'PARTITION p2 VALUES IN (2)';
set @partitions = concat(@partitions,',PARTITION p1 VALUES IN (1)');
set @@new = 1;
create table hints (i int primary key) engine=ndb partition by list(i) (PARTITION p2 VALUES IN (2),PARTITION p1 VALUES IN (1));
insert into hints values (2);
Hint node by 2 of 2
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	0	24
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	11
2	READS	12
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	10
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	12
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	40	24
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	51
2	READS	52
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	10
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	12
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	80	24
test/def/t1	sys/def/10/b$unique	Unique hash index	2	40	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	131
2	READS	132
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	10
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	12
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	80	24
test/def/t1	sys/def/10/b$unique	Unique hash index	2	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	80	32
test/def/t1	sys/def/10/b$unique	Unique hash index	2	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	160	40
test/def/t1	sys/def/10/b$unique	Unique hash index	2	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	239	40
test/def/t1	sys/def/10/b$unique	Unique hash index	2	120	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	319	40
test/def/t1	sys/def/10/b$unique	Unique hash index	2	160	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	398	40
test/def/t1	sys/def/10/b$unique	Unique hash index	2	200	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	438	48
test/def/t1	sys/def/10/b$unique	Unique hash index	2	200	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	477	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	477	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	0	12
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	291
2	READS	292
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	10
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	12
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	80	12
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	40	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	372
2	READS	374
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	10
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	12
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	160	12
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	80	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	572
2	READS	574
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	10
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	12
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	160	12
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	115	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	160	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	155	0
insert into hints values (1);
Hint node by 1 of 2
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	477	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	572
2	READS	574
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	50
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	47
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	517	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	612
2	READS	614
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	50
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	47
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	557	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	280	0
test/def/t1	sys/def/10/c	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	692
2	READS	694
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	50
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	47
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	557	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	280	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	557	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	280	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	637	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	280	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	716	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	360	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	796	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	400	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	875	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	440	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	915	72
test/def/t1	sys/def/10/b$unique	Unique hash index	2	440	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	954	80
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	954	80
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	160	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	155	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	852
2	READS	854
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	50
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	47
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	240	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	195	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	932
2	READS	934
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	50
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	47
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	320	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	160	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	235	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	1
1	READS	20
2	LOCAL_READS	1132
2	READS	1134
3	LOCAL_READS	0
3	READS	8
4	LOCAL_READS	0
4	READS	50
5	LOCAL_READS	0
5	READS	9
6	LOCAL_READS	0
6	READS	47
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	320	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	160	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	270	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	320	28
test/def/t2	sys/def/15/b$unique	Unique hash index	2	160	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	310	0
drop table hints;
delete from t1;
delete from t2;
drop table test.t1;
drop table test.t2;
Test read-locality of FULLY-REPLICATED
create table test.t1 (a int primary key,
b int,
c int,
d int,
unique(b) using hash,
key(c),
key(a,c))
comment="NDB_TABLE=FULLY_REPLICATED=1"
   engine=ndb;
Warnings:
Warning	1121	Ndb does not support unique index on NULL valued attributes, index access with NULL value will become full table scan
create table test.t2 (a int primary key,
b int,
c int,
d text,
unique(b) using hash,
key(c))
comment="NDB_TABLE=FULLY_REPLICATED=1"
  engine=ndb;
Warnings:
Warning	1121	Ndb does not support unique index on NULL valued attributes, index access with NULL value will become full table scan
select id into @t1_id from ndbinfo.ndb$dict_obj_info where fq_name = 'test/def/t1';
select id into @t1ui_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t1_id and type = 3;
select id into @t2_id from ndbinfo.ndb$dict_obj_info where fq_name = 'test/def/t2';
select id into @t2ui_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t2_id and type = 3;
select id into @t2bt_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t2_id and fq_name like 'test/def/NDB$BLOB%';
Put some data in.
Make it more interesting for joining
update test.t1 set c=c+1, d=d+1;
select count(distinct node_id) into @nodes
from ndbinfo.ndb$membership where group_id < 0xFFFFFF00;
Check replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where fq_name='test/def/t1'
   and fragment_num=0;
count(distinct node_id)
2
Check nodes with table data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where fq_name='test/def/t1';
count(distinct node_id)
2
Check UI replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t1ui_id
and fragment_num=0;
count(distinct node_id)
2
Check nodes with UI data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t1ui_id;
count(distinct node_id)
2
Put some data in.
insert into test.t2 select a,b,c,repeat('BJC',300) from test.t1;
Check blob table replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t2bt_id
and fragment_num=0;
count(distinct node_id)
2
Check nodes with blob data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t2bt_id;
count(distinct node_id)
2
set @partitions = 'PARTITION p2 VALUES IN (2)';
set @partitions = concat(@partitions,',PARTITION p1 VALUES IN (1)');
set @@new = 1;
create table hints (i int primary key) engine=ndb partition by list(i) (PARTITION p2 VALUES IN (2),PARTITION p1 VALUES IN (1));
insert into hints values (2);
Hint node by 2 of 2
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	0	24
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	1262
2	READS	1274
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	40	24
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	1302
2	READS	1314
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	80	24
test/def/t1	sys/def/10/b$unique	Unique hash index	2	40	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	1382
2	READS	1394
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	80	24
test/def/t1	sys/def/10/b$unique	Unique hash index	2	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	80	32
test/def/t1	sys/def/10/b$unique	Unique hash index	2	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	160	40
test/def/t1	sys/def/10/b$unique	Unique hash index	2	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	239	40
test/def/t1	sys/def/10/b$unique	Unique hash index	2	120	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	319	40
test/def/t1	sys/def/10/b$unique	Unique hash index	2	160	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	398	40
test/def/t1	sys/def/10/b$unique	Unique hash index	2	200	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	438	48
test/def/t1	sys/def/10/b$unique	Unique hash index	2	200	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	477	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	8
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	477	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	0	12
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	1542
2	READS	1554
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	80	12
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	40	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	1622
2	READS	1636
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	160	12
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	80	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	1822
2	READS	1836
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	160	12
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	115	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	160	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	155	0
insert into hints values (1);
Hint node by 1 of 2
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	477	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	1897
2	READS	1911
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	517	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	1937
2	READS	1951
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	557	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	280	0
test/def/t1	sys/def/10/c	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	2017
2	READS	2031
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	557	56
test/def/t1	sys/def/10/b$unique	Unique hash index	2	280	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	557	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	280	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	637	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	280	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	716	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	360	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	796	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	400	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	875	64
test/def/t1	sys/def/10/b$unique	Unique hash index	2	440	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	915	72
test/def/t1	sys/def/10/b$unique	Unique hash index	2	440	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	954	80
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	0
test/def/t1	sys/def/10/c	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	8
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	954	80
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	160	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	155	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	2177
2	READS	2191
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	240	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	80	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	195	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	2257
2	READS	2271
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	320	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	160	0
test/def/t2	sys/def/15/c	Ordered index	2	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	235	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	11
1	READS	42
2	LOCAL_READS	2457
2	READS	2471
3	LOCAL_READS	0
3	READS	16
4	LOCAL_READS	0
4	READS	58
5	LOCAL_READS	0
5	READS	17
6	LOCAL_READS	0
6	READS	55
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	320	20
test/def/t2	sys/def/15/b$unique	Unique hash index	2	160	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	270	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	320	28
test/def/t2	sys/def/15/b$unique	Unique hash index	2	160	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	310	0
drop table hints;
delete from t1;
delete from t2;
Test read-locality of FULLY-REPLICATED with 2 node groups
Nodegroup 1 created
alter table t1 algorithm=inplace, reorganize partition;
alter table t2 algorithm=inplace, reorganize partition;
select id into @t1_id from ndbinfo.ndb$dict_obj_info where fq_name = 'test/def/t1';
select id into @t1ui_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t1_id and type = 3;
select id into @t2_id from ndbinfo.ndb$dict_obj_info where fq_name = 'test/def/t2';
select id into @t2ui_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t2_id and type = 3;
select id into @t2bt_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t2_id and fq_name like 'test/def/NDB$BLOB%';
Put some data in.
Make it more interesting for joining
update test.t1 set c=c+1, d=d+1;
select count(distinct node_id) into @nodes
from ndbinfo.ndb$membership where group_id < 0xFFFFFF00;
Check replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where fq_name='test/def/t1'
   and fragment_num=0;
count(distinct node_id)
2
Check nodes with table data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where fq_name='test/def/t1';
count(distinct node_id)
4
Check UI replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t1ui_id
and fragment_num=0;
count(distinct node_id)
2
Check nodes with UI data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t1ui_id;
count(distinct node_id)
4
Put some data in.
insert into test.t2 select a,b,c,repeat('BJC',300) from test.t1;
Check blob table replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t2bt_id
and fragment_num=0;
count(distinct node_id)
2
Check nodes with blob data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t2bt_id;
count(distinct node_id)
4
set @partitions = 'PARTITION p4 VALUES IN (4)';
set @partitions = concat(@partitions,',PARTITION p3 VALUES IN (3)');
set @partitions = concat(@partitions,',PARTITION p2 VALUES IN (2)');
set @partitions = concat(@partitions,',PARTITION p1 VALUES IN (1)');
set @@new = 1;
create table hints (i int primary key) engine=ndb partition by list(i) (PARTITION p4 VALUES IN (4),PARTITION p3 VALUES IN (3),PARTITION p2 VALUES IN (2),PARTITION p1 VALUES IN (1));
insert into hints values (4);
Hint node by 4 of 4
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	0	16
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2573
2	READS	2589
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	0
4	READS	63
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	40	16
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2573
2	READS	2589
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	40
4	READS	103
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	80	16
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2573
2	READS	2589
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	120
4	READS	183
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	80	16
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	8
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	80	24
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	8
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	160	32
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	40	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	8
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	239	32
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	120	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	8
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	319	32
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	160	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	8
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	398	32
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	200	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	8
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	438	40
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	200	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	8
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	477	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	8
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	477	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	360	40
NULL	test/def/t2	User table	4	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	160	8
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	310	8
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2573
2	READS	2589
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	280
4	READS	343
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	360	40
NULL	test/def/t2	User table	4	80	8
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	160	8
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	310	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	40	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2573
2	READS	2589
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	360
4	READS	423
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	362	40
NULL	test/def/t2	User table	4	158	8
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	162	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	78	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	311	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	79	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2578
2	READS	2594
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	555
4	READS	618
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	362	40
NULL	test/def/t2	User table	4	158	8
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	162	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	78	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	311	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	114	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	362	48
NULL	test/def/t2	User table	4	158	8
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	162	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	78	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	351	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	114	0
insert into hints values (3);
Hint node by 3 of 4
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	954	96
NULL	test/def/t1	User table	4	477	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2618
2	READS	2634
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	590
4	READS	653
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	974	96
NULL	test/def/t1	User table	4	497	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	480	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	240	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2638
2	READS	2654
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	610
4	READS	673
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	994	96
NULL	test/def/t1	User table	4	517	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	500	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	260	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2678
2	READS	2694
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	650
4	READS	713
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	994	96
NULL	test/def/t1	User table	4	517	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	500	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	260	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	994	104
NULL	test/def/t1	User table	4	517	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	500	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	260	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1034	104
NULL	test/def/t1	User table	4	557	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	500	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	260	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1074	104
NULL	test/def/t1	User table	4	596	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	540	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	300	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1114	104
NULL	test/def/t1	User table	4	636	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	560	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	320	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1154	104
NULL	test/def/t1	User table	4	675	48
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	580	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	340	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1154	104
NULL	test/def/t1	User table	4	715	56
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	580	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	340	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1193	112
NULL	test/def/t1	User table	4	715	56
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	620	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	340	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	8
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1193	112
NULL	test/def/t1	User table	4	715	56
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	620	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	340	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	362	48
NULL	test/def/t2	User table	4	158	8
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	162	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	78	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	351	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	114	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2758
2	READS	2774
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	730
4	READS	793
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	402	48
NULL	test/def/t2	User table	4	198	8
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	162	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	78	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	371	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	134	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2798
2	READS	2814
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	770
4	READS	833
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	442	48
NULL	test/def/t2	User table	4	238	8
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	202	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	118	0
test/def/t2	sys/def/15/c	Ordered index	2	0	16
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	391	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	154	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2898
2	READS	2914
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	870
4	READS	933
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	442	48
NULL	test/def/t2	User table	4	238	8
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	202	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	118	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	426	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	154	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	442	48
NULL	test/def/t2	User table	4	238	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	202	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	118	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	426	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	194	0
insert into hints values (2);
Hint node by 2 of 4
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1193	112
NULL	test/def/t1	User table	4	715	56
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	620	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	340	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2933
2	READS	2949
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	910
4	READS	973
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1213	112
NULL	test/def/t1	User table	4	735	56
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	620	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	340	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2953
2	READS	2969
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	930
4	READS	993
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1233	112
NULL	test/def/t1	User table	4	755	56
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	640	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	360	0
test/def/t1	sys/def/10/c	Ordered index	2	0	32
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	2993
2	READS	3009
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	970
4	READS	1033
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1233	112
NULL	test/def/t1	User table	4	755	56
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	640	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	360	0
test/def/t1	sys/def/10/c	Ordered index	2	0	40
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1233	112
NULL	test/def/t1	User table	4	755	64
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	640	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	360	0
test/def/t1	sys/def/10/c	Ordered index	2	0	40
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1273	112
NULL	test/def/t1	User table	4	795	64
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	640	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	360	0
test/def/t1	sys/def/10/c	Ordered index	2	0	40
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1312	112
NULL	test/def/t1	User table	4	835	64
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	680	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	400	0
test/def/t1	sys/def/10/c	Ordered index	2	0	40
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1352	112
NULL	test/def/t1	User table	4	875	64
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	700	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	420	0
test/def/t1	sys/def/10/c	Ordered index	2	0	40
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1391	112
NULL	test/def/t1	User table	4	915	64
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	720	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	440	0
test/def/t1	sys/def/10/c	Ordered index	2	0	40
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1431	120
NULL	test/def/t1	User table	4	915	64
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	720	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	440	0
test/def/t1	sys/def/10/c	Ordered index	2	0	40
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1431	120
NULL	test/def/t1	User table	4	954	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	720	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	480	0
test/def/t1	sys/def/10/c	Ordered index	2	0	40
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1431	120
NULL	test/def/t1	User table	4	954	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	720	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	480	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	442	48
NULL	test/def/t2	User table	4	238	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	202	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	118	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	426	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	194	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	3073
2	READS	3089
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	1050
4	READS	1113
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	482	48
NULL	test/def/t2	User table	4	278	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	202	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	118	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	446	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	214	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	3113
2	READS	3129
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	1090
4	READS	1153
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	522	48
NULL	test/def/t2	User table	4	318	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	242	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	158	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	466	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	234	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	3213
2	READS	3229
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	1190
4	READS	1253
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	522	48
NULL	test/def/t2	User table	4	318	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	242	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	158	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	466	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	269	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	522	56
NULL	test/def/t2	User table	4	318	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	242	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	158	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	506	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	269	0
insert into hints values (1);
Hint node by 1 of 4
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1431	120
NULL	test/def/t1	User table	4	954	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	720	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	480	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	3253
2	READS	3269
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	1225
4	READS	1288
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1451	120
NULL	test/def/t1	User table	4	974	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	720	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	480	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	3273
2	READS	3289
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	1245
4	READS	1308
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1471	120
NULL	test/def/t1	User table	4	994	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	740	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	500	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	32
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	3313
2	READS	3329
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	1285
4	READS	1348
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1471	120
NULL	test/def/t1	User table	4	994	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	740	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	500	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	40
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1471	128
NULL	test/def/t1	User table	4	994	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	740	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	500	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	40
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1511	128
NULL	test/def/t1	User table	4	1034	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	740	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	500	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	40
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1551	128
NULL	test/def/t1	User table	4	1073	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	780	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	540	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	40
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1591	128
NULL	test/def/t1	User table	4	1113	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	800	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	560	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	40
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1631	128
NULL	test/def/t1	User table	4	1152	72
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	820	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	580	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	40
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1631	128
NULL	test/def/t1	User table	4	1192	80
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	820	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	580	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	40
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1670	136
NULL	test/def/t1	User table	4	1192	80
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	860	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	580	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	40
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	16
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	24
NULL	test/def/t1	User table	2	1670	136
NULL	test/def/t1	User table	4	1192	80
test/def/t1	sys/def/10/b$unique	Unique hash index	1	0	8
test/def/t1	sys/def/10/b$unique	Unique hash index	2	860	8
test/def/t1	sys/def/10/b$unique	Unique hash index	4	580	0
test/def/t1	sys/def/10/c	Ordered index	2	0	48
test/def/t1	sys/def/10/c	Ordered index	4	0	48
test/def/t1	sys/def/10/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/10/PRIMARY	Ordered index	4	0	24
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	522	56
NULL	test/def/t2	User table	4	318	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	242	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	158	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	506	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	269	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	3393
2	READS	3409
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	1365
4	READS	1428
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	562	56
NULL	test/def/t2	User table	4	358	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	242	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	158	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	526	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	289	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	3433
2	READS	3449
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	1405
4	READS	1468
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	602	56
NULL	test/def/t2	User table	4	398	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	282	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	198	0
test/def/t2	sys/def/15/c	Ordered index	2	0	24
test/def/t2	sys/def/15/c	Ordered index	4	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	546	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	309	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	16
1	READS	49
2	LOCAL_READS	3533
2	READS	3549
3	LOCAL_READS	0
3	READS	19
4	LOCAL_READS	1505
4	READS	1568
5	LOCAL_READS	0
5	READS	20
6	LOCAL_READS	0
6	READS	66
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	602	56
NULL	test/def/t2	User table	4	398	16
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	282	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	198	0
test/def/t2	sys/def/15/c	Ordered index	2	0	32
test/def/t2	sys/def/15/c	Ordered index	4	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	581	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	309	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	16
NULL	test/def/t2	User table	2	602	56
NULL	test/def/t2	User table	4	398	24
test/def/t2	sys/def/15/b$unique	Unique hash index	1	0	8
test/def/t2	sys/def/15/b$unique	Unique hash index	2	282	8
test/def/t2	sys/def/15/b$unique	Unique hash index	4	198	0
test/def/t2	sys/def/15/c	Ordered index	2	0	32
test/def/t2	sys/def/15/c	Ordered index	4	0	16
test/def/t2	test/def/NDB$BLOB_15_3	User table	1	0	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	2	581	8
test/def/t2	test/def/NDB$BLOB_15_3	User table	4	349	0
drop table hints;
delete from t1;
delete from t2;
drop table test.t1;
drop table test.t2;
Test read-locality of READ-BACKUP with 3 node groups
Nodegroup 2 created
create table test.t1 (a int primary key,
b int,
c int,
d int,
unique(b) using hash,
key(c),
key(a,c))
comment="NDB_TABLE=READ_BACKUP=1"
  engine=ndb;
Warnings:
Warning	1121	Ndb does not support unique index on NULL valued attributes, index access with NULL value will become full table scan
create table test.t2 (a int primary key,
b int,
c int,
d text,
unique(b) using hash,
key(c))
comment="NDB_TABLE=READ_BACKUP=1"
  engine=ndb;
Warnings:
Warning	1121	Ndb does not support unique index on NULL valued attributes, index access with NULL value will become full table scan
select id into @t1_id from ndbinfo.ndb$dict_obj_info where fq_name = 'test/def/t1';
select id into @t1ui_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t1_id and type = 3;
select id into @t2_id from ndbinfo.ndb$dict_obj_info where fq_name = 'test/def/t2';
select id into @t2ui_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t2_id and type = 3;
select id into @t2bt_id from ndbinfo.ndb$dict_obj_info where parent_obj_id = @t2_id and fq_name like 'test/def/NDB$BLOB%';
Put some data in.
Make it more interesting for joining
update test.t1 set c=c+1, d=d+1;
select count(distinct node_id) into @nodes
from ndbinfo.ndb$membership where group_id < 0xFFFFFF00;
Check replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where fq_name='test/def/t1'
   and fragment_num=0;
count(distinct node_id)
2
Check nodes with table data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where fq_name='test/def/t1';
count(distinct node_id)
6
Check UI replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t1ui_id
and fragment_num=0;
count(distinct node_id)
2
Check nodes with UI data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t1ui_id;
count(distinct node_id)
6
Put some data in.
insert into test.t2 select a,b,c,repeat('BJC',300) from test.t1;
Check blob table replicas
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t2bt_id
and fragment_num=0;
count(distinct node_id)
2
Check nodes with blob data
select count(distinct node_id)
from ndbinfo.operations_per_fragment
where table_id = @t2bt_id;
count(distinct node_id)
6
set @partitions = 'PARTITION p6 VALUES IN (6)';
set @partitions = concat(@partitions,',PARTITION p5 VALUES IN (5)');
set @partitions = concat(@partitions,',PARTITION p4 VALUES IN (4)');
set @partitions = concat(@partitions,',PARTITION p3 VALUES IN (3)');
set @partitions = concat(@partitions,',PARTITION p2 VALUES IN (2)');
set @partitions = concat(@partitions,',PARTITION p1 VALUES IN (1)');
set @@new = 1;
create table hints (i int primary key) engine=ndb partition by list(i) (PARTITION p6 VALUES IN (6),PARTITION p5 VALUES IN (5),PARTITION p4 VALUES IN (4),PARTITION p3 VALUES IN (3),PARTITION p2 VALUES IN (2),PARTITION p1 VALUES IN (1));
insert into hints values (6);
Hint node by 6 of 6
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	0	24
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	0	24
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	0	24
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3616
2	READS	3645
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1545
4	READS	1620
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	0
6	READS	74
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	11	24
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	16	24
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	13	24
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3627
2	READS	3656
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1561
4	READS	1636
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	13
6	READS	87
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	22	24
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	32	24
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	26	24
test/def/t1	sys/def/11/b$unique	Unique hash index	2	11	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	16	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	13	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3649
2	READS	3678
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1593
4	READS	1668
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	39
6	READS	113
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	22	24
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	32	24
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	26	24
test/def/t1	sys/def/11/b$unique	Unique hash index	2	11	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	16	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	13	0
test/def/t1	sys/def/11/c	Ordered index	2	0	8
test/def/t1	sys/def/11/c	Ordered index	4	0	8
test/def/t1	sys/def/11/c	Ordered index	6	0	8
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	22	32
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	32	32
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	26	32
test/def/t1	sys/def/11/b$unique	Unique hash index	2	11	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	16	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	13	0
test/def/t1	sys/def/11/c	Ordered index	2	0	8
test/def/t1	sys/def/11/c	Ordered index	4	0	8
test/def/t1	sys/def/11/c	Ordered index	6	0	8
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	45	40
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	64	40
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	51	40
test/def/t1	sys/def/11/b$unique	Unique hash index	2	11	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	16	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	13	0
test/def/t1	sys/def/11/c	Ordered index	2	0	8
test/def/t1	sys/def/11/c	Ordered index	4	0	8
test/def/t1	sys/def/11/c	Ordered index	6	0	8
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	67	40
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	96	40
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	76	40
test/def/t1	sys/def/11/b$unique	Unique hash index	2	34	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	48	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	38	0
test/def/t1	sys/def/11/c	Ordered index	2	0	8
test/def/t1	sys/def/11/c	Ordered index	4	0	8
test/def/t1	sys/def/11/c	Ordered index	6	0	8
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	90	40
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	128	40
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	101	40
test/def/t1	sys/def/11/b$unique	Unique hash index	2	45	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	64	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	51	0
test/def/t1	sys/def/11/c	Ordered index	2	0	8
test/def/t1	sys/def/11/c	Ordered index	4	0	8
test/def/t1	sys/def/11/c	Ordered index	6	0	8
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	112	40
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	160	40
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	126	40
test/def/t1	sys/def/11/b$unique	Unique hash index	2	57	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	80	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	63	0
test/def/t1	sys/def/11/c	Ordered index	2	0	8
test/def/t1	sys/def/11/c	Ordered index	4	0	8
test/def/t1	sys/def/11/c	Ordered index	6	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	124	48
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	176	48
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	138	48
test/def/t1	sys/def/11/b$unique	Unique hash index	2	57	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	80	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	63	0
test/def/t1	sys/def/11/c	Ordered index	2	0	8
test/def/t1	sys/def/11/c	Ordered index	4	0	8
test/def/t1	sys/def/11/c	Ordered index	6	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	135	56
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	192	56
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	150	56
test/def/t1	sys/def/11/b$unique	Unique hash index	2	69	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	96	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	75	0
test/def/t1	sys/def/11/c	Ordered index	2	0	8
test/def/t1	sys/def/11/c	Ordered index	4	0	8
test/def/t1	sys/def/11/c	Ordered index	6	0	8
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	135	56
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	192	56
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	150	56
test/def/t1	sys/def/11/b$unique	Unique hash index	2	69	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	96	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	75	0
test/def/t1	sys/def/11/c	Ordered index	2	0	32
test/def/t1	sys/def/11/c	Ordered index	4	0	32
test/def/t1	sys/def/11/c	Ordered index	6	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	0	12
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	0	12
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	0	12
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3693
2	READS	3722
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1657
4	READS	1732
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	91
6	READS	165
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	22	12
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	32	12
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	26	12
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	11	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	16	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	13	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3716
2	READS	3746
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1689
4	READS	1764
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	117
6	READS	191
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	44	12
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	64	12
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	52	12
test/def/t2	sys/def/16/b$unique	Unique hash index	2	22	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	32	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	26	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	22	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	32	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	26	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3771
2	READS	3801
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1769
4	READS	1844
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	182
6	READS	256
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	44	12
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	64	12
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	52	12
test/def/t2	sys/def/16/b$unique	Unique hash index	2	22	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	32	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	26	0
test/def/t2	sys/def/16/c	Ordered index	2	0	8
test/def/t2	sys/def/16/c	Ordered index	4	0	8
test/def/t2	sys/def/16/c	Ordered index	6	0	8
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	32	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	45	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	38	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	44	20
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	64	20
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	52	20
test/def/t2	sys/def/16/b$unique	Unique hash index	2	22	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	32	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	26	0
test/def/t2	sys/def/16/c	Ordered index	2	0	8
test/def/t2	sys/def/16/c	Ordered index	4	0	8
test/def/t2	sys/def/16/c	Ordered index	6	0	8
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	43	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	61	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	51	0
insert into hints values (5);
Hint node by 5 of 6
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	135	56
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	192	56
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	150	56
test/def/t1	sys/def/11/b$unique	Unique hash index	2	69	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	96	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	75	0
test/def/t1	sys/def/11/c	Ordered index	2	0	32
test/def/t1	sys/def/11/c	Ordered index	4	0	32
test/def/t1	sys/def/11/c	Ordered index	6	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3792
2	READS	3876
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1769
4	READS	1844
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	182
6	READS	256
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	146	56
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	208	56
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	163	56
test/def/t1	sys/def/11/b$unique	Unique hash index	2	69	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	96	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	75	0
test/def/t1	sys/def/11/c	Ordered index	2	0	32
test/def/t1	sys/def/11/c	Ordered index	4	0	32
test/def/t1	sys/def/11/c	Ordered index	6	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3803
2	READS	3887
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1785
4	READS	1860
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	195
6	READS	269
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	157	56
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	224	56
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	176	56
test/def/t1	sys/def/11/b$unique	Unique hash index	2	80	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	112	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	88	0
test/def/t1	sys/def/11/c	Ordered index	2	0	32
test/def/t1	sys/def/11/c	Ordered index	4	0	32
test/def/t1	sys/def/11/c	Ordered index	6	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3825
2	READS	3909
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1817
4	READS	1892
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	221
6	READS	295
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	157	56
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	224	56
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	176	56
test/def/t1	sys/def/11/b$unique	Unique hash index	2	80	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	112	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	88	0
test/def/t1	sys/def/11/c	Ordered index	2	0	40
test/def/t1	sys/def/11/c	Ordered index	4	0	40
test/def/t1	sys/def/11/c	Ordered index	6	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	157	64
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	224	64
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	176	64
test/def/t1	sys/def/11/b$unique	Unique hash index	2	80	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	112	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	88	0
test/def/t1	sys/def/11/c	Ordered index	2	0	40
test/def/t1	sys/def/11/c	Ordered index	4	0	40
test/def/t1	sys/def/11/c	Ordered index	6	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	180	64
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	256	64
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	201	64
test/def/t1	sys/def/11/b$unique	Unique hash index	2	80	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	112	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	88	0
test/def/t1	sys/def/11/c	Ordered index	2	0	40
test/def/t1	sys/def/11/c	Ordered index	4	0	40
test/def/t1	sys/def/11/c	Ordered index	6	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	202	64
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	288	64
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	226	64
test/def/t1	sys/def/11/b$unique	Unique hash index	2	103	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	144	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	113	0
test/def/t1	sys/def/11/c	Ordered index	2	0	40
test/def/t1	sys/def/11/c	Ordered index	4	0	40
test/def/t1	sys/def/11/c	Ordered index	6	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	225	64
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	320	64
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	251	64
test/def/t1	sys/def/11/b$unique	Unique hash index	2	114	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	160	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	126	0
test/def/t1	sys/def/11/c	Ordered index	2	0	40
test/def/t1	sys/def/11/c	Ordered index	4	0	40
test/def/t1	sys/def/11/c	Ordered index	6	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	247	64
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	352	64
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	276	64
test/def/t1	sys/def/11/b$unique	Unique hash index	2	126	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	176	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	138	0
test/def/t1	sys/def/11/c	Ordered index	2	0	40
test/def/t1	sys/def/11/c	Ordered index	4	0	40
test/def/t1	sys/def/11/c	Ordered index	6	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	259	72
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	368	72
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	288	72
test/def/t1	sys/def/11/b$unique	Unique hash index	2	126	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	176	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	138	0
test/def/t1	sys/def/11/c	Ordered index	2	0	40
test/def/t1	sys/def/11/c	Ordered index	4	0	40
test/def/t1	sys/def/11/c	Ordered index	6	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	270	80
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	384	80
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	300	80
test/def/t1	sys/def/11/b$unique	Unique hash index	2	138	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	192	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	150	0
test/def/t1	sys/def/11/c	Ordered index	2	0	40
test/def/t1	sys/def/11/c	Ordered index	4	0	40
test/def/t1	sys/def/11/c	Ordered index	6	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	8
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	8
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	270	80
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	384	80
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	300	80
test/def/t1	sys/def/11/b$unique	Unique hash index	2	138	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	192	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	150	0
test/def/t1	sys/def/11/c	Ordered index	2	0	64
test/def/t1	sys/def/11/c	Ordered index	4	0	64
test/def/t1	sys/def/11/c	Ordered index	6	0	64
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	44	20
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	64	20
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	52	20
test/def/t2	sys/def/16/b$unique	Unique hash index	2	22	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	32	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	26	0
test/def/t2	sys/def/16/c	Ordered index	2	0	8
test/def/t2	sys/def/16/c	Ordered index	4	0	8
test/def/t2	sys/def/16/c	Ordered index	6	0	8
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	43	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	61	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	51	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3869
2	READS	3953
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1881
4	READS	1956
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	273
6	READS	347
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	66	20
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	96	20
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	78	20
test/def/t2	sys/def/16/b$unique	Unique hash index	2	22	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	32	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	26	0
test/def/t2	sys/def/16/c	Ordered index	2	0	8
test/def/t2	sys/def/16/c	Ordered index	4	0	8
test/def/t2	sys/def/16/c	Ordered index	6	0	8
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	54	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	77	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	64	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3891
2	READS	3975
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1913
4	READS	1988
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	299
6	READS	373
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	88	20
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	128	20
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	104	20
test/def/t2	sys/def/16/b$unique	Unique hash index	2	44	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	64	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	52	0
test/def/t2	sys/def/16/c	Ordered index	2	0	8
test/def/t2	sys/def/16/c	Ordered index	4	0	8
test/def/t2	sys/def/16/c	Ordered index	6	0	8
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	65	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	93	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	77	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3946
2	READS	4030
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1993
4	READS	2068
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	364
6	READS	438
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	88	20
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	128	20
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	104	20
test/def/t2	sys/def/16/b$unique	Unique hash index	2	44	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	64	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	52	0
test/def/t2	sys/def/16/c	Ordered index	2	0	16
test/def/t2	sys/def/16/c	Ordered index	4	0	16
test/def/t2	sys/def/16/c	Ordered index	6	0	16
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	75	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	106	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	89	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	88	28
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	128	28
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	104	28
test/def/t2	sys/def/16/b$unique	Unique hash index	2	44	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	64	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	52	0
test/def/t2	sys/def/16/c	Ordered index	2	0	16
test/def/t2	sys/def/16/c	Ordered index	4	0	16
test/def/t2	sys/def/16/c	Ordered index	6	0	16
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	86	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	122	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	102	0
insert into hints values (4);
Hint node by 4 of 6
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	270	80
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	384	80
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	300	80
test/def/t1	sys/def/11/b$unique	Unique hash index	2	138	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	192	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	150	0
test/def/t1	sys/def/11/c	Ordered index	2	0	64
test/def/t1	sys/def/11/c	Ordered index	4	0	64
test/def/t1	sys/def/11/c	Ordered index	6	0	64
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3967
2	READS	4105
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	1993
4	READS	2068
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	364
6	READS	438
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	281	80
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	400	80
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	313	80
test/def/t1	sys/def/11/b$unique	Unique hash index	2	138	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	192	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	150	0
test/def/t1	sys/def/11/c	Ordered index	2	0	64
test/def/t1	sys/def/11/c	Ordered index	4	0	64
test/def/t1	sys/def/11/c	Ordered index	6	0	64
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	3978
2	READS	4116
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2009
4	READS	2084
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	377
6	READS	451
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	292	80
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	416	80
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	326	80
test/def/t1	sys/def/11/b$unique	Unique hash index	2	149	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	208	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	163	0
test/def/t1	sys/def/11/c	Ordered index	2	0	64
test/def/t1	sys/def/11/c	Ordered index	4	0	64
test/def/t1	sys/def/11/c	Ordered index	6	0	64
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4000
2	READS	4138
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2041
4	READS	2116
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	403
6	READS	477
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	292	80
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	416	80
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	326	80
test/def/t1	sys/def/11/b$unique	Unique hash index	2	149	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	208	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	163	0
test/def/t1	sys/def/11/c	Ordered index	2	0	72
test/def/t1	sys/def/11/c	Ordered index	4	0	72
test/def/t1	sys/def/11/c	Ordered index	6	0	72
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	292	88
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	416	88
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	326	88
test/def/t1	sys/def/11/b$unique	Unique hash index	2	149	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	208	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	163	0
test/def/t1	sys/def/11/c	Ordered index	2	0	72
test/def/t1	sys/def/11/c	Ordered index	4	0	72
test/def/t1	sys/def/11/c	Ordered index	6	0	72
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	315	88
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	448	88
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	351	88
test/def/t1	sys/def/11/b$unique	Unique hash index	2	149	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	208	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	163	0
test/def/t1	sys/def/11/c	Ordered index	2	0	72
test/def/t1	sys/def/11/c	Ordered index	4	0	72
test/def/t1	sys/def/11/c	Ordered index	6	0	72
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	337	88
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	480	88
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	376	88
test/def/t1	sys/def/11/b$unique	Unique hash index	2	172	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	240	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	188	0
test/def/t1	sys/def/11/c	Ordered index	2	0	72
test/def/t1	sys/def/11/c	Ordered index	4	0	72
test/def/t1	sys/def/11/c	Ordered index	6	0	72
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	360	88
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	512	88
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	401	88
test/def/t1	sys/def/11/b$unique	Unique hash index	2	183	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	256	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	201	0
test/def/t1	sys/def/11/c	Ordered index	2	0	72
test/def/t1	sys/def/11/c	Ordered index	4	0	72
test/def/t1	sys/def/11/c	Ordered index	6	0	72
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	382	88
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	544	88
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	426	88
test/def/t1	sys/def/11/b$unique	Unique hash index	2	195	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	272	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	213	0
test/def/t1	sys/def/11/c	Ordered index	2	0	72
test/def/t1	sys/def/11/c	Ordered index	4	0	72
test/def/t1	sys/def/11/c	Ordered index	6	0	72
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	394	96
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	560	96
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	438	96
test/def/t1	sys/def/11/b$unique	Unique hash index	2	195	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	272	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	213	0
test/def/t1	sys/def/11/c	Ordered index	2	0	72
test/def/t1	sys/def/11/c	Ordered index	4	0	72
test/def/t1	sys/def/11/c	Ordered index	6	0	72
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	405	104
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	576	104
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	450	104
test/def/t1	sys/def/11/b$unique	Unique hash index	2	207	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	288	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	225	0
test/def/t1	sys/def/11/c	Ordered index	2	0	72
test/def/t1	sys/def/11/c	Ordered index	4	0	72
test/def/t1	sys/def/11/c	Ordered index	6	0	72
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	16
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	16
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	405	104
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	576	104
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	450	104
test/def/t1	sys/def/11/b$unique	Unique hash index	2	207	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	288	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	225	0
test/def/t1	sys/def/11/c	Ordered index	2	0	96
test/def/t1	sys/def/11/c	Ordered index	4	0	96
test/def/t1	sys/def/11/c	Ordered index	6	0	96
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	88	28
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	128	28
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	104	28
test/def/t2	sys/def/16/b$unique	Unique hash index	2	44	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	64	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	52	0
test/def/t2	sys/def/16/c	Ordered index	2	0	16
test/def/t2	sys/def/16/c	Ordered index	4	0	16
test/def/t2	sys/def/16/c	Ordered index	6	0	16
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	86	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	122	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	102	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4044
2	READS	4182
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2105
4	READS	2180
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	455
6	READS	529
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	110	28
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	160	28
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	130	28
test/def/t2	sys/def/16/b$unique	Unique hash index	2	44	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	64	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	52	0
test/def/t2	sys/def/16/c	Ordered index	2	0	16
test/def/t2	sys/def/16/c	Ordered index	4	0	16
test/def/t2	sys/def/16/c	Ordered index	6	0	16
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	97	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	138	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	115	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4066
2	READS	4204
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2137
4	READS	2212
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	481
6	READS	555
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	132	28
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	192	28
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	156	28
test/def/t2	sys/def/16/b$unique	Unique hash index	2	66	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	96	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	78	0
test/def/t2	sys/def/16/c	Ordered index	2	0	16
test/def/t2	sys/def/16/c	Ordered index	4	0	16
test/def/t2	sys/def/16/c	Ordered index	6	0	16
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	108	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	154	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	128	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4121
2	READS	4259
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2217
4	READS	2292
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	546
6	READS	620
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	132	28
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	192	28
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	156	28
test/def/t2	sys/def/16/b$unique	Unique hash index	2	66	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	96	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	78	0
test/def/t2	sys/def/16/c	Ordered index	2	0	24
test/def/t2	sys/def/16/c	Ordered index	4	0	24
test/def/t2	sys/def/16/c	Ordered index	6	0	24
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	118	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	167	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	140	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	132	36
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	192	36
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	156	36
test/def/t2	sys/def/16/b$unique	Unique hash index	2	66	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	96	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	78	0
test/def/t2	sys/def/16/c	Ordered index	2	0	24
test/def/t2	sys/def/16/c	Ordered index	4	0	24
test/def/t2	sys/def/16/c	Ordered index	6	0	24
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	129	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	183	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	153	0
insert into hints values (3);
Hint node by 3 of 6
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	405	104
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	576	104
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	450	104
test/def/t1	sys/def/11/b$unique	Unique hash index	2	207	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	288	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	225	0
test/def/t1	sys/def/11/c	Ordered index	2	0	96
test/def/t1	sys/def/11/c	Ordered index	4	0	96
test/def/t1	sys/def/11/c	Ordered index	6	0	96
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4142
2	READS	4334
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2217
4	READS	2292
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	546
6	READS	620
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	416	104
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	592	104
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	463	104
test/def/t1	sys/def/11/b$unique	Unique hash index	2	207	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	288	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	225	0
test/def/t1	sys/def/11/c	Ordered index	2	0	96
test/def/t1	sys/def/11/c	Ordered index	4	0	96
test/def/t1	sys/def/11/c	Ordered index	6	0	96
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4153
2	READS	4345
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2233
4	READS	2308
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	559
6	READS	633
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	427	104
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	608	104
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	476	104
test/def/t1	sys/def/11/b$unique	Unique hash index	2	218	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	304	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	238	0
test/def/t1	sys/def/11/c	Ordered index	2	0	96
test/def/t1	sys/def/11/c	Ordered index	4	0	96
test/def/t1	sys/def/11/c	Ordered index	6	0	96
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4175
2	READS	4367
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2265
4	READS	2340
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	585
6	READS	659
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	427	104
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	608	104
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	476	104
test/def/t1	sys/def/11/b$unique	Unique hash index	2	218	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	304	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	238	0
test/def/t1	sys/def/11/c	Ordered index	2	0	104
test/def/t1	sys/def/11/c	Ordered index	4	0	104
test/def/t1	sys/def/11/c	Ordered index	6	0	104
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	427	112
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	608	112
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	476	112
test/def/t1	sys/def/11/b$unique	Unique hash index	2	218	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	304	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	238	0
test/def/t1	sys/def/11/c	Ordered index	2	0	104
test/def/t1	sys/def/11/c	Ordered index	4	0	104
test/def/t1	sys/def/11/c	Ordered index	6	0	104
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	450	112
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	640	112
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	501	112
test/def/t1	sys/def/11/b$unique	Unique hash index	2	218	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	304	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	238	0
test/def/t1	sys/def/11/c	Ordered index	2	0	104
test/def/t1	sys/def/11/c	Ordered index	4	0	104
test/def/t1	sys/def/11/c	Ordered index	6	0	104
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	472	112
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	672	112
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	526	112
test/def/t1	sys/def/11/b$unique	Unique hash index	2	241	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	336	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	263	0
test/def/t1	sys/def/11/c	Ordered index	2	0	104
test/def/t1	sys/def/11/c	Ordered index	4	0	104
test/def/t1	sys/def/11/c	Ordered index	6	0	104
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	495	112
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	704	112
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	551	112
test/def/t1	sys/def/11/b$unique	Unique hash index	2	252	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	352	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	276	0
test/def/t1	sys/def/11/c	Ordered index	2	0	104
test/def/t1	sys/def/11/c	Ordered index	4	0	104
test/def/t1	sys/def/11/c	Ordered index	6	0	104
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	517	112
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	736	112
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	576	112
test/def/t1	sys/def/11/b$unique	Unique hash index	2	264	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	368	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	288	0
test/def/t1	sys/def/11/c	Ordered index	2	0	104
test/def/t1	sys/def/11/c	Ordered index	4	0	104
test/def/t1	sys/def/11/c	Ordered index	6	0	104
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	529	120
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	752	120
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	588	120
test/def/t1	sys/def/11/b$unique	Unique hash index	2	264	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	368	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	288	0
test/def/t1	sys/def/11/c	Ordered index	2	0	104
test/def/t1	sys/def/11/c	Ordered index	4	0	104
test/def/t1	sys/def/11/c	Ordered index	6	0	104
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	540	128
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	768	128
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	600	128
test/def/t1	sys/def/11/b$unique	Unique hash index	2	276	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	384	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	300	0
test/def/t1	sys/def/11/c	Ordered index	2	0	104
test/def/t1	sys/def/11/c	Ordered index	4	0	104
test/def/t1	sys/def/11/c	Ordered index	6	0	104
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	24
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	24
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	540	128
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	768	128
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	600	128
test/def/t1	sys/def/11/b$unique	Unique hash index	2	276	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	384	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	300	0
test/def/t1	sys/def/11/c	Ordered index	2	0	128
test/def/t1	sys/def/11/c	Ordered index	4	0	128
test/def/t1	sys/def/11/c	Ordered index	6	0	128
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	132	36
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	192	36
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	156	36
test/def/t2	sys/def/16/b$unique	Unique hash index	2	66	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	96	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	78	0
test/def/t2	sys/def/16/c	Ordered index	2	0	24
test/def/t2	sys/def/16/c	Ordered index	4	0	24
test/def/t2	sys/def/16/c	Ordered index	6	0	24
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	129	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	183	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	153	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4219
2	READS	4411
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2329
4	READS	2404
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	637
6	READS	711
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	154	36
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	224	36
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	182	36
test/def/t2	sys/def/16/b$unique	Unique hash index	2	66	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	96	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	78	0
test/def/t2	sys/def/16/c	Ordered index	2	0	24
test/def/t2	sys/def/16/c	Ordered index	4	0	24
test/def/t2	sys/def/16/c	Ordered index	6	0	24
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	140	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	199	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	166	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4241
2	READS	4433
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2361
4	READS	2436
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	663
6	READS	737
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	176	36
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	256	36
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	208	36
test/def/t2	sys/def/16/b$unique	Unique hash index	2	88	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	128	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	104	0
test/def/t2	sys/def/16/c	Ordered index	2	0	24
test/def/t2	sys/def/16/c	Ordered index	4	0	24
test/def/t2	sys/def/16/c	Ordered index	6	0	24
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	151	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	215	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	179	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4296
2	READS	4488
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2441
4	READS	2516
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	728
6	READS	802
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	176	36
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	256	36
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	208	36
test/def/t2	sys/def/16/b$unique	Unique hash index	2	88	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	128	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	104	0
test/def/t2	sys/def/16/c	Ordered index	2	0	32
test/def/t2	sys/def/16/c	Ordered index	4	0	32
test/def/t2	sys/def/16/c	Ordered index	6	0	32
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	161	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	228	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	191	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	176	44
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	256	44
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	208	44
test/def/t2	sys/def/16/b$unique	Unique hash index	2	88	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	128	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	104	0
test/def/t2	sys/def/16/c	Ordered index	2	0	32
test/def/t2	sys/def/16/c	Ordered index	4	0	32
test/def/t2	sys/def/16/c	Ordered index	6	0	32
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	172	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	244	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	204	0
insert into hints values (2);
Hint node by 2 of 6
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	540	128
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	768	128
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	600	128
test/def/t1	sys/def/11/b$unique	Unique hash index	2	276	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	384	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	300	0
test/def/t1	sys/def/11/c	Ordered index	2	0	128
test/def/t1	sys/def/11/c	Ordered index	4	0	128
test/def/t1	sys/def/11/c	Ordered index	6	0	128
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4317
2	READS	4563
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2441
4	READS	2516
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	728
6	READS	802
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	551	128
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	784	128
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	613	128
test/def/t1	sys/def/11/b$unique	Unique hash index	2	276	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	384	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	300	0
test/def/t1	sys/def/11/c	Ordered index	2	0	128
test/def/t1	sys/def/11/c	Ordered index	4	0	128
test/def/t1	sys/def/11/c	Ordered index	6	0	128
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4328
2	READS	4574
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2457
4	READS	2532
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	741
6	READS	815
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	562	128
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	800	128
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	626	128
test/def/t1	sys/def/11/b$unique	Unique hash index	2	287	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	400	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	313	0
test/def/t1	sys/def/11/c	Ordered index	2	0	128
test/def/t1	sys/def/11/c	Ordered index	4	0	128
test/def/t1	sys/def/11/c	Ordered index	6	0	128
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4350
2	READS	4596
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2489
4	READS	2564
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	767
6	READS	841
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	562	128
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	800	128
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	626	128
test/def/t1	sys/def/11/b$unique	Unique hash index	2	287	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	400	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	313	0
test/def/t1	sys/def/11/c	Ordered index	2	0	136
test/def/t1	sys/def/11/c	Ordered index	4	0	136
test/def/t1	sys/def/11/c	Ordered index	6	0	136
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	562	136
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	800	136
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	626	136
test/def/t1	sys/def/11/b$unique	Unique hash index	2	287	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	400	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	313	0
test/def/t1	sys/def/11/c	Ordered index	2	0	136
test/def/t1	sys/def/11/c	Ordered index	4	0	136
test/def/t1	sys/def/11/c	Ordered index	6	0	136
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	585	136
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	832	136
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	651	136
test/def/t1	sys/def/11/b$unique	Unique hash index	2	287	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	400	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	313	0
test/def/t1	sys/def/11/c	Ordered index	2	0	136
test/def/t1	sys/def/11/c	Ordered index	4	0	136
test/def/t1	sys/def/11/c	Ordered index	6	0	136
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	607	136
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	864	136
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	676	136
test/def/t1	sys/def/11/b$unique	Unique hash index	2	310	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	432	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	338	0
test/def/t1	sys/def/11/c	Ordered index	2	0	136
test/def/t1	sys/def/11/c	Ordered index	4	0	136
test/def/t1	sys/def/11/c	Ordered index	6	0	136
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	630	136
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	896	136
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	701	136
test/def/t1	sys/def/11/b$unique	Unique hash index	2	321	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	448	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	351	0
test/def/t1	sys/def/11/c	Ordered index	2	0	136
test/def/t1	sys/def/11/c	Ordered index	4	0	136
test/def/t1	sys/def/11/c	Ordered index	6	0	136
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	652	136
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	928	136
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	726	136
test/def/t1	sys/def/11/b$unique	Unique hash index	2	333	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	464	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	363	0
test/def/t1	sys/def/11/c	Ordered index	2	0	136
test/def/t1	sys/def/11/c	Ordered index	4	0	136
test/def/t1	sys/def/11/c	Ordered index	6	0	136
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	664	144
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	944	144
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	738	144
test/def/t1	sys/def/11/b$unique	Unique hash index	2	333	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	464	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	363	0
test/def/t1	sys/def/11/c	Ordered index	2	0	136
test/def/t1	sys/def/11/c	Ordered index	4	0	136
test/def/t1	sys/def/11/c	Ordered index	6	0	136
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	675	152
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	960	152
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	750	152
test/def/t1	sys/def/11/b$unique	Unique hash index	2	345	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	480	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	375	0
test/def/t1	sys/def/11/c	Ordered index	2	0	136
test/def/t1	sys/def/11/c	Ordered index	4	0	136
test/def/t1	sys/def/11/c	Ordered index	6	0	136
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	32
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	32
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	675	152
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	960	152
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	750	152
test/def/t1	sys/def/11/b$unique	Unique hash index	2	345	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	480	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	375	0
test/def/t1	sys/def/11/c	Ordered index	2	0	160
test/def/t1	sys/def/11/c	Ordered index	4	0	160
test/def/t1	sys/def/11/c	Ordered index	6	0	160
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	176	44
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	256	44
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	208	44
test/def/t2	sys/def/16/b$unique	Unique hash index	2	88	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	128	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	104	0
test/def/t2	sys/def/16/c	Ordered index	2	0	32
test/def/t2	sys/def/16/c	Ordered index	4	0	32
test/def/t2	sys/def/16/c	Ordered index	6	0	32
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	172	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	244	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	204	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4394
2	READS	4640
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2553
4	READS	2628
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	819
6	READS	893
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	198	44
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	288	44
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	234	44
test/def/t2	sys/def/16/b$unique	Unique hash index	2	88	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	128	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	104	0
test/def/t2	sys/def/16/c	Ordered index	2	0	32
test/def/t2	sys/def/16/c	Ordered index	4	0	32
test/def/t2	sys/def/16/c	Ordered index	6	0	32
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	183	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	260	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	217	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4416
2	READS	4662
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2585
4	READS	2660
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	845
6	READS	919
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	220	44
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	320	44
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	260	44
test/def/t2	sys/def/16/b$unique	Unique hash index	2	110	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	160	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	130	0
test/def/t2	sys/def/16/c	Ordered index	2	0	32
test/def/t2	sys/def/16/c	Ordered index	4	0	32
test/def/t2	sys/def/16/c	Ordered index	6	0	32
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	194	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	276	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	230	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4471
2	READS	4717
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2665
4	READS	2740
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	910
6	READS	984
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	220	44
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	320	44
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	260	44
test/def/t2	sys/def/16/b$unique	Unique hash index	2	110	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	160	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	130	0
test/def/t2	sys/def/16/c	Ordered index	2	0	40
test/def/t2	sys/def/16/c	Ordered index	4	0	40
test/def/t2	sys/def/16/c	Ordered index	6	0	40
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	204	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	289	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	242	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	220	52
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	320	52
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	260	52
test/def/t2	sys/def/16/b$unique	Unique hash index	2	110	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	160	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	130	0
test/def/t2	sys/def/16/c	Ordered index	2	0	40
test/def/t2	sys/def/16/c	Ordered index	4	0	40
test/def/t2	sys/def/16/c	Ordered index	6	0	40
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	215	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	305	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	255	0
insert into hints values (1);
Hint node by 1 of 6
Tests on T1 (!Blobs)
Test some basic NdbApi
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	675	152
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	960	152
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	750	152
test/def/t1	sys/def/11/b$unique	Unique hash index	2	345	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	480	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	375	0
test/def/t1	sys/def/11/c	Ordered index	2	0	160
test/def/t1	sys/def/11/c	Ordered index	4	0	160
test/def/t1	sys/def/11/c	Ordered index	6	0	160
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
PK lookups
explain select * from test.t1 where t1.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`a` = 6)
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4492
2	READS	4792
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2665
4	READS	2740
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	910
6	READS	984
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	686	152
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	976	152
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	763	152
test/def/t1	sys/def/11/b$unique	Unique hash index	2	345	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	480	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	375	0
test/def/t1	sys/def/11/c	Ordered index	2	0	160
test/def/t1	sys/def/11/c	Ordered index	4	0	160
test/def/t1	sys/def/11/c	Ordered index	6	0	160
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4503
2	READS	4803
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2681
4	READS	2756
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	923
6	READS	997
UI lookups
explain select * from test.t1 where t1.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	697	152
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	992	152
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	776	152
test/def/t1	sys/def/11/b$unique	Unique hash index	2	356	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	496	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	388	0
test/def/t1	sys/def/11/c	Ordered index	2	0	160
test/def/t1	sys/def/11/c	Ordered index	4	0	160
test/def/t1	sys/def/11/c	Ordered index	6	0	160
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4525
2	READS	4825
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2713
4	READS	2788
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	949
6	READS	1023
OI scan
explain select * from test.t1 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t1`.`c` > 6); Using MRR
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1` where (`test`.`t1`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	697	152
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	992	152
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	776	152
test/def/t1	sys/def/11/b$unique	Unique hash index	2	356	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	496	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	388	0
test/def/t1	sys/def/11/c	Ordered index	2	0	168
test/def/t1	sys/def/11/c	Ordered index	4	0	168
test/def/t1	sys/def/11/c	Ordered index	6	0	168
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
Table scan
explain select * from test.t1;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t1	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t1`.`a` AS `a`,`test`.`t1`.`b` AS `b`,`test`.`t1`.`c` AS `c`,`test`.`t1`.`d` AS `d` from `test`.`t1`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	697	160
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	992	160
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	776	160
test/def/t1	sys/def/11/b$unique	Unique hash index	2	356	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	496	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	388	0
test/def/t1	sys/def/11/c	Ordered index	2	0	168
test/def/t1	sys/def/11/c	Ordered index	4	0	168
test/def/t1	sys/def/11/c	Ordered index	6	0	168
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
Test pushed queries (SPJ)
Pushed pk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	720	160
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	1024	160
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	801	160
test/def/t1	sys/def/11/b$unique	Unique hash index	2	356	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	496	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	388	0
test/def/t1	sys/def/11/c	Ordered index	2	0	168
test/def/t1	sys/def/11/c	Ordered index	4	0	168
test/def/t1	sys/def/11/c	Ordered index	6	0	168
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
Pushed uk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	742	160
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	1056	160
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	826	160
test/def/t1	sys/def/11/b$unique	Unique hash index	2	379	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	528	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	413	0
test/def/t1	sys/def/11/c	Ordered index	2	0	168
test/def/t1	sys/def/11/c	Ordered index	4	0	168
test/def/t1	sys/def/11/c	Ordered index	6	0	168
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
Pushed uk->pk
Lookup to get a.d, feeding pk lookup of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a
where a.b = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ref	b	b	5	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`a` = `test`.`a`.`d`) and (`test`.`a`.`b` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	765	160
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	1088	160
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	851	160
test/def/t1	sys/def/11/b$unique	Unique hash index	2	390	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	544	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	426	0
test/def/t1	sys/def/11/c	Ordered index	2	0	168
test/def/t1	sys/def/11/c	Ordered index	4	0	168
test/def/t1	sys/def/11/c	Ordered index	6	0	168
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
Pushed pk->uk
Lookup to get a.d, feeding uk lookup of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b
where a.a = 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	eq_ref	PRIMARY,a	PRIMARY	4	const	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`b` = `test`.`a`.`d`) and (`test`.`a`.`a` = 6))
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	787	160
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	1120	160
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	876	160
test/def/t1	sys/def/11/b$unique	Unique hash index	2	402	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	560	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	438	0
test/def/t1	sys/def/11/c	Ordered index	2	0	168
test/def/t1	sys/def/11/c	Ordered index	4	0	168
test/def/t1	sys/def/11/c	Ordered index	6	0	168
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
Pushed scan originating sub-lookups
Table scan to get a.d, feeding pk lookups of b.a
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	eq_ref	PRIMARY,a	PRIMARY	4	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`a` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.a;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	799	168
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	1136	168
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	888	168
test/def/t1	sys/def/11/b$unique	Unique hash index	2	402	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	560	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	438	0
test/def/t1	sys/def/11/c	Ordered index	2	0	168
test/def/t1	sys/def/11/c	Ordered index	4	0	168
test/def/t1	sys/def/11/c	Ordered index	6	0	168
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
Pushed scan originating sub-lookups
Table scan to get a.d, feeding uk lookups of b.b
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	ALL	NULL	NULL	NULL	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition (`test`.`a`.`d` is not null)
1	SIMPLE	b	#	ref	b	b	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where (`test`.`b`.`b` = `test`.`a`.`d`)
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
a.d = b.b;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	810	176
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	1152	176
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	900	176
test/def/t1	sys/def/11/b$unique	Unique hash index	2	414	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	576	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	450	0
test/def/t1	sys/def/11/c	Ordered index	2	0	168
test/def/t1	sys/def/11/c	Ordered index	4	0	168
test/def/t1	sys/def/11/c	Ordered index	6	0	168
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	40
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	40
Pushed scan originating sub-scans
Range scan on a.a > 10 getting a.d, feeding range scans on b.c = a.d
explain select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	a	#	range	PRIMARY,a	PRIMARY	4	NULL	#	#	Parent of 2 pushed join@1; Using where with pushed condition ((`test`.`a`.`a` > 10) and (`test`.`a`.`d` is not null)); Using MRR
1	SIMPLE	b	#	ref	c	c	5	test.a.d	#	#	Child of 'a' in pushed join@1
Warnings:
Note	1003	/* select#1 */ select `test`.`a`.`a` AS `a`,`test`.`a`.`d` AS `d`,`test`.`b`.`d` AS `d` from `test`.`t1` `a` join `test`.`t1` `b` where ((`test`.`b`.`c` = `test`.`a`.`d`) and (`test`.`a`.`a` > 10))
select a.a, a.d, b.d
from
test.t1 a
join
test.t1 b
on
b.c=a.d
where
a.a>10;
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t1' OR fq_name='test/def/t1') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t1	User table	1	0	8
NULL	test/def/t1	User table	2	810	176
NULL	test/def/t1	User table	3	0	8
NULL	test/def/t1	User table	4	1152	176
NULL	test/def/t1	User table	5	0	8
NULL	test/def/t1	User table	6	900	176
test/def/t1	sys/def/11/b$unique	Unique hash index	2	414	0
test/def/t1	sys/def/11/b$unique	Unique hash index	4	576	0
test/def/t1	sys/def/11/b$unique	Unique hash index	6	450	0
test/def/t1	sys/def/11/c	Ordered index	2	0	192
test/def/t1	sys/def/11/c	Ordered index	4	0	192
test/def/t1	sys/def/11/c	Ordered index	6	0	192
test/def/t1	sys/def/11/PRIMARY	Ordered index	2	0	48
test/def/t1	sys/def/11/PRIMARY	Ordered index	4	0	48
test/def/t1	sys/def/11/PRIMARY	Ordered index	6	0	48
Tests on T2 (Blobs)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	220	52
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	320	52
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	260	52
test/def/t2	sys/def/16/b$unique	Unique hash index	2	110	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	160	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	130	0
test/def/t2	sys/def/16/c	Ordered index	2	0	40
test/def/t2	sys/def/16/c	Ordered index	4	0	40
test/def/t2	sys/def/16/c	Ordered index	6	0	40
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	215	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	305	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	255	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4569
2	READS	4869
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2777
4	READS	2852
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	1001
6	READS	1075
Test some basic NdbApi
explain select * from test.t2 where t2.a=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	eq_ref	PRIMARY	PRIMARY	4	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`a` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	242	52
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	352	52
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	286	52
test/def/t2	sys/def/16/b$unique	Unique hash index	2	110	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	160	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	130	0
test/def/t2	sys/def/16/c	Ordered index	2	0	40
test/def/t2	sys/def/16/c	Ordered index	4	0	40
test/def/t2	sys/def/16/c	Ordered index	6	0	40
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	226	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	321	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	268	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4591
2	READS	4891
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2809
4	READS	2884
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	1027
6	READS	1101
UI lookups
explain select * from test.t2 where t2.b=6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ref	b	b	5	const	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`b` = 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	264	52
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	384	52
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	312	52
test/def/t2	sys/def/16/b$unique	Unique hash index	2	132	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	192	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	156	0
test/def/t2	sys/def/16/c	Ordered index	2	0	40
test/def/t2	sys/def/16/c	Ordered index	4	0	40
test/def/t2	sys/def/16/c	Ordered index	6	0	40
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	237	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	337	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	281	0
select node_id, counter_name, sum(val) from ndbinfo.counters
where counter_name = 'READS' or counter_name = 'LOCAL_READS'
  group by node_id, counter_name;
node_id	counter_name	sum(val)
1	LOCAL_READS	33
1	READS	70
2	LOCAL_READS	4646
2	READS	4946
3	LOCAL_READS	0
3	READS	28
4	LOCAL_READS	2889
4	READS	2964
5	LOCAL_READS	0
5	READS	28
6	LOCAL_READS	1092
6	READS	1166
OI scan
explain select * from test.t2 where c > 6;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	range	c	c	5	NULL	#	#	Using where with pushed condition (`test`.`t2`.`c` > 6)
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2` where (`test`.`t2`.`c` > 6)
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	264	52
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	384	52
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	312	52
test/def/t2	sys/def/16/b$unique	Unique hash index	2	132	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	192	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	156	0
test/def/t2	sys/def/16/c	Ordered index	2	0	48
test/def/t2	sys/def/16/c	Ordered index	4	0	48
test/def/t2	sys/def/16/c	Ordered index	6	0	48
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	247	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	350	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	293	0
Table scan
explain select * from test.t2;
id	select_type	table	partitions	type	possible_keys	key	key_len	ref	rows	filtered	Extra
1	SIMPLE	t2	#	ALL	NULL	NULL	NULL	NULL	#	#	NULL
Warnings:
Note	1003	/* select#1 */ select `test`.`t2`.`a` AS `a`,`test`.`t2`.`b` AS `b`,`test`.`t2`.`c` AS `c`,`test`.`t2`.`d` AS `d` from `test`.`t2`
select parent_fq_name, fq_name, type, node_id, sum(tot_key_reads), sum(tot_frag_scans)
from ndbinfo.operations_per_fragment
where (parent_fq_name='test/def/t2' OR fq_name='test/def/t2') and
(tot_key_reads > 0 or tot_frag_scans > 0)
group by parent_fq_name, fq_name, type, node_id;
parent_fq_name	fq_name	type	node_id	sum(tot_key_reads)	sum(tot_frag_scans)
NULL	test/def/t2	User table	1	0	4
NULL	test/def/t2	User table	2	264	60
NULL	test/def/t2	User table	3	0	4
NULL	test/def/t2	User table	4	384	60
NULL	test/def/t2	User table	5	0	4
NULL	test/def/t2	User table	6	312	60
test/def/t2	sys/def/16/b$unique	Unique hash index	2	132	0
test/def/t2	sys/def/16/b$unique	Unique hash index	4	192	0
test/def/t2	sys/def/16/b$unique	Unique hash index	6	156	0
test/def/t2	sys/def/16/c	Ordered index	2	0	48
test/def/t2	sys/def/16/c	Ordered index	4	0	48
test/def/t2	sys/def/16/c	Ordered index	6	0	48
test/def/t2	test/def/NDB$BLOB_16_3	User table	2	258	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	4	366	0
test/def/t2	test/def/NDB$BLOB_16_3	User table	6	306	0
drop table hints;
delete from t1;
delete from t2;
drop table test.t1;
drop table test.t2;
