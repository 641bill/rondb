-- source include/have_ndb.inc
-- source have_ndb_error_insert.inc

CREATE TABLE t1(k int not null primary key auto_increment) engine=ndb;

INSERT INTO t1 VALUES (NULL);

INSERT INTO t1 SELECT NULL FROM t1;
INSERT INTO t1 SELECT NULL FROM t1;
INSERT INTO t1 SELECT NULL FROM t1;
INSERT INTO t1 SELECT NULL FROM t1;

# Error insert to pause backup.
--exec $NDB_MGM -e'all error 10039' > /dev/null

--exec $NDB_MGM -e'start backup nowait' > /dev/null

# Check if the error ER_GET_ERRMSG is thrown when
# ALTER TABLE is executed while the backup is in progress.

--error ER_GET_ERRMSG
ALTER TABLE t1 ADD COLUMN c3 INT COLUMN_FORMAT DYNAMIC;

# Error insert to resume backup.
--exec $NDB_MGM -e'all error 0' > /dev/null

# Dropping table in the end to ensure consistency in mtr.
# This won't go through until the backup is completed.
# Hence, executing DROP TABLE in a loop with a gap of one
# second between successive attempts until the table is
# dropped successfully, after the backup is completed.

let $mysql_errno = ER_GET_ERRMSG;
while($mysql_errno)
{
  sleep 1;
  --error 0,1306
  DROP TABLE t1;
}

--echo Backup aborts on out-of-disk-space
--disable_query_log
--exec $NDB_MGM -e 'all error 10054' > /dev/null

let $dump_file = $MYSQLTEST_VARDIR/tmp/desc.txt;
--error 255
--exec $NDB_MGM -e 'start backup wait completed' > $dump_file 2>&1

# Load the file into a temporary table
CREATE TEMPORARY TABLE test.desc (a varchar(512)) ENGINE = HEAP;

--chmod 0777 $dump_file
--replace_result $dump_file DUMP_FILE
eval LOAD DATA INFILE '$dump_file' INTO TABLE test.desc;
--remove_file $dump_file
--enable_query_log

# Query the temporary table
SELECT TRIM(TRAILING "\r" FROM a) FROM test.desc WHERE a NOT LIKE "%Connected%";
echo $value;

DROP TABLE test.desc;
