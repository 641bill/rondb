--echo ---- CREATE TABLE ... SELECT: violation cases ----

--let $error_code= ER_GTID_UNSAFE_CREATE_SELECT
--let $error_message= Statement violates GTID consistency: CREATE TABLE ... SELECT.
--let $gtid_violation= 1
--let $expect_counter_value= 0

# CREATE...SELECT for base table is not allowed, regardless of engine,
# since it may get logged as CREATE followed by BEGIN; rows; COMMIT
# (on this server if binlog_format=row or on a slave that uses
# binlog_format=row).

--echo # CREATE ... SELECT (InnoDB): Violation.
--let $statement= CREATE TABLE t1 (a INT) ENGINE = InnoDB SELECT 1
--source extra/binlog_tests/enforce_gtid_consistency_statement.inc
DROP TABLE IF EXISTS t1;

--echo # CREATE ... SELECT (MyISAM): Violation.
--let $statement= CREATE TABLE t1 (a INT) ENGINE = MyISAM SELECT 1
--source extra/binlog_tests/enforce_gtid_consistency_statement.inc
DROP TABLE IF EXISTS t1;

--echo ---- CREATE TABLE ... SELECT: consistent cases ----

# CREATE TEMPORARY...SELECT is GTID consistent since it cannot
# generate row events, since temporary DML is never logged in row
# format.

--echo # CREATE TEMPORARY ... SELECT: Consistent.
--let $gtid_violation= 0

--let $statement= CREATE TEMPORARY TABLE t1 (a INT) ENGINE = InnoDB SELECT 1
--source extra/binlog_tests/enforce_gtid_consistency_statement.inc
DROP TABLE IF EXISTS t1;

--let $statement= CREATE TEMPORARY TABLE t1 (a INT) ENGINE = MyISAM SELECT 1
--source extra/binlog_tests/enforce_gtid_consistency_statement.inc
DROP TABLE IF EXISTS t1;

# When SQL_LOG_BIN=0, it is GTID-consistent since nothing is logged.

--echo # CREATE ... SELECT, SQL_LOG_BIN=0: Consistent.
SET SQL_LOG_BIN = 0;
--let $statement= CREATE TABLE t1 (a INT) ENGINE = InnoDB SELECT 1
--source extra/binlog_tests/enforce_gtid_consistency_statement.inc
DROP TABLE IF EXISTS t1;

--let $statement= CREATE TABLE t1 (a INT) ENGINE = MyISAM SELECT 1
--source extra/binlog_tests/enforce_gtid_consistency_statement.inc
DROP TABLE IF EXISTS t1;
SET SQL_LOG_BIN = 1;
