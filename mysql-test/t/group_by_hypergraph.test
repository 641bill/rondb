--source include/have_hypergraph.inc

--echo #
--echo # Bug#32980875: WL#14422: ASSERTION `FALSE' FAILED|SQL/BASIC_ROW_ITERATORS.H
--echo #

# This should have been a unit test in hypergraph_optimizer-t.cc, but
# the unit test framework does not currently allow creating temporary
# tables.
#
# We want to test that the hypergraph optimizer doesn't try to do
# sort-ahead on an aggregate.
#
# We expect the hypergraph optimizer to set up a plan like this:
#
# -> Sort with duplicate removal: t.x, `MIN(t2.x)`
#   -> Stream results
#       -> Group aggregate: min(t2.x)
#           -> Sort: t2.x
#               -> Inner hash join (t1.x = t2.x)
#                   -> Table scan on t1
#                   -> Hash
#                       -> Table scan on t2
#
# Before, it would set up this plan, which tried to sort on MIN(t2.x)
# before the aggregation had happened:
#
# -> Remove duplicates from input grouped on t1.x, min(t2.x)
#   -> Stream results
#       -> Group aggregate: min(t2.x)
#           -> Sort: t1.x, min(t2.x)
#               -> Inner hash join (t1.x = t2.x)
#                   -> Table scan on t1
#                   -> Hash
#                       -> Table scan on t2

CREATE TABLE t (x INTEGER);
INSERT INTO t VALUES (1), (2), (3);
ANALYZE TABLE t;
--replace_regex / *\(cost=.*//
EXPLAIN FORMAT=TREE
 SELECT DISTINCT t1.x, MIN(t2.x)
 FROM t t1 JOIN t t2 USING (x)
 GROUP BY t2.x;
DROP TABLE t;
