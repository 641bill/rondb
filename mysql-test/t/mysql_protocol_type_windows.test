# Embedded server doesn't support external clients
--source include/not_embedded.inc
# Windows does not have SOCKET, but will try to create a PIPE as well as MEMORY
--source include/windows.inc

let $nmp= query_get_value("SHOW VARIABLES LIKE 'named_pipe'", Value, 1);
if ($nmp != ON){
  skip No named pipe support;
}

let $shm= query_get_value("SHOW VARIABLES LIKE 'shared_memory'", Value, 1);
if ($shm != ON){
  skip No shm support;
}
let $shm_name= query_get_value("SHOW GLOBAL VARIABLES LIKE 'shared_memory_base_name'", Value, 1);

# test for Bug #4998 "--protocol doesn't reject bad values"

--exec echo "select ' ok' as '<default>'" | $MYSQL
--exec echo "select ' ok' as 'TCP'"       | $MYSQL --protocol=TCP
--exec echo "select ' ok' as 'PIPE'"      | $MYSQL --protocol=PIPE    2>&1 || true
--exec echo "select ' ok' as 'MEMORY'"    | $MYSQL --protocol=MEMORY
--exec echo "select ' ok' as 'SOCKET'"    | $MYSQL --protocol=SOCKET  2>&1 || true
--exec echo "select ' ok' as 'NullS'"     | $MYSQL --protocol=NullS   2>&1 || true

# End of 4.1 tests

# WL#7729
#
## Connection Protocols: SOCKET, TCP/IP, SSL/TLS BY enabling general log. 

# Make sure we start with a clean slate. log_tables.test says this is OK.
TRUNCATE TABLE mysql.general_log;

--echo --------------- general log ---------------------------------------

SET @old_log_output=    @@global.log_output;
SET @old_general_log=         @@global.general_log;
SET @old_general_log_file=    @@global.general_log_file;

let $general_file_on = $MYSQLTEST_VARDIR/log/general_connection_protocols.log;
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval SET GLOBAL general_log_file = '$general_file_on';
SET GLOBAL log_output =       'FILE,TABLE';
SET GLOBAL general_log=       'ON';

--echo
# Checking default connection_type.

SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';


CREATE USER 'user_tcp'@'127.0.0.1';
GRANT ALL PRIVILEGES ON *.* TO 'user_tcp'@'127.0.0.1';
CREATE USER 'user_ssl'@'127.0.0.1';
GRANT ALL PRIVILEGES ON *.* TO 'user_ssl'@'127.0.0.1';

--echo
--echo # connection type testing for TCP/IP protocol.
connect(tcp_con1,localhost,root);
SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';

connection default;
disconnect tcp_con1;

--echo
connect(tcp_con2,localhost,root,,,$MASTER_MYPORT);
SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';

connection default;
disconnect tcp_con2;

--echo
connect(pipe_con3,localhost,root,,,,$MASTER_MYSOCK);
SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';

connection default;
disconnect pipe_con3;


--echo
--echo # MYSQLADMIN test 
--exec $MYSQLADMIN -S $MASTER_MYSOCK -P $MASTER_MYPORT -uroot ping

#
--echo # Testing TCP/IP connections over SSL/TLS
#

connect(ssl_con1,localhost,root,,,,$MASTER_MYSOCK,SSL);
SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';

connection default;
disconnect ssl_con1;
--echo
#connect(ssl_con2,127.0.0.1,user_tcp,,,,, TCP SSL);
#SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';
#connection default;
#disconnect ssl_con2;

--echo # Testing TCP/IP connections over SSL/TLS

--echo
connect(ssl_con3,127.0.0.1,user_ssl,,,,,SSL);
SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';

connection default;
disconnect ssl_con3;

--echo
connect(ssl_con4,127.0.0.1,user_ssl,,,$MASTER_MYPORT,,SSL);
SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';

connection default;
disconnect ssl_con4;

--echo
connect(ssl_con5,127.0.0.1,user_ssl,,,$MASTER_MYPORT,$MASTER_MYSOCK,SSL);
SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';

connection default;
disconnect ssl_con5;

--echo
# Testing NAMED PIPE protocol on linux, It should fail with error message:
# ERROR 2047 (HY000): Wrong or unknown protocol
# It's passing when we use MTR connect(), must be a MTR bug.Tested manually working fine.
connect(pipe_con,localhost,root,,,,,PIPE);
SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';

connection default;
disconnect pipe_con;

--echo
# Testing SHARED MEMORY protocol on linux, It should fail with error message:
# ERROR 2047 (HY000): Wrong or unknown protocol.
# It's passing when we use MTR connect(), must be a MTR bug.Tested manually working fine.
connect(memory_con,localhost,root,,,,,SHM);
SELECT connection_type FROM performance_schema.threads WHERE processlist_command='Query';

connection default;
disconnect memory_con;

CREATE TABLE test_log (argument TEXT);
--replace_result $MYSQLTEST_VARDIR MYSQLTEST_VARDIR
eval LOAD DATA LOCAL INFILE '$general_file_on'
INTO TABLE test_log FIELDS TERMINATED BY '\n' LINES TERMINATED BY '\n';

--echo Show what is logged:
--echo ------ rewrite ------
SELECT argument FROM mysql.general_log where command_type='connect';
--echo ------ done ------

--remove_file $general_file_on
DROP table test_log;

SET GLOBAL general_log_file=  @old_general_log_file;
SET GLOBAL general_log=       @old_general_log;
SET GLOBAL log_output=        @old_log_output;


--echo #Cleanup
DROP USER 'user_tcp'@'127.0.0.1', 'user_ssl'@'127.0.0.1';


