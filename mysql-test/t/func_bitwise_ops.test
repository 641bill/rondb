create table t(id int, vbin1 varbinary(32), vbin2 varbinary(32));
insert into t values
(1, x'59', x'6a'),
(2, x'5939', x'6ac3'),
(3, x'5939a998', x'6ac35d2a'),
(4, x'5939a99861154f35', x'6ac35d2a3ab34bda'),
(5, x'5939a99861154f3587d5440618e9b28b', x'6ac35d2a3ab34bda8ac412ea0141852c'),
(6, x'5939a99861154f3587d5440618e9b28b166181c5ca514ab1b8e9c970ae5e421a', x'6ac35d2a3ab34bda8ac412ea0141852c3c8e38bb19934a7092a40bb19db13a80'),
(7, x'5939a99861154f3587d5440618e9b28b', x'8ac412ea0141852c'),
(8, x'5939a99861154f35', x'6ac35d2a3ab34bda8ac412ea0141852c');

select hex(vbin1 & vbin2), hex(vbin1 | vbin2), hex(vbin1 ^ vbin2), hex(~vbin1), hex(vbin1 << 3), hex(vbin2 >> 3), bit_count(vbin1)
from t where id in(1,2,3,4,5,6);
select hex(vbin1 & vbin2) from t where id=7;
select hex(vbin1 | vbin2) from t where id=7;
select hex(vbin1 ^ vbin2) from t where id=7;
select hex(vbin1 << 3), hex(vbin2 << 3) from t where id=7;
select hex(vbin1 >> 3), hex(vbin2 >> 3) from t where id=7;
select hex(~vbin1), hex(~vbin2) from t where id=7;
select hex(vbin1 & vbin2) from t where id=8;
select hex(vbin1 | vbin2) from t where id=8;
select hex(vbin1 ^ vbin2) from t where id=8;
select hex(vbin1 << 3), hex(vbin2 << 3) from t where id=8;
select hex(vbin1 >> 3), hex(vbin2 >> 3) from t where id=8;
select hex(~vbin1), hex(~vbin2) from t where id=8;

prepare s1 from
"select hex(vbin1 & vbin2), hex(vbin1 | vbin2), hex(vbin1 ^ vbin2), hex(~vbin1), hex(vbin1 << 3), hex(vbin2 >> 3), bit_count(vbin1)
from t where id in(1,2,3,4,5,6)";

execute s1;
execute s1;

prepare s2 from
"select hex(vbin1 & vbin2), hex(vbin1 | vbin2), hex(vbin1 ^ vbin2), hex(~vbin1), hex(vbin1 << 3), hex(vbin2 >> 3), bit_count(vbin1)
from t where id in(7)";

execute s2;
execute s2;

drop table t;

CREATE TABLE `networks` (
`id` int(10) unsigned NOT NULL AUTO_INCREMENT,
`start` varbinary(16) NOT NULL,
`end` varbinary(16) NOT NULL,
`country_code` varchar(2) NOT NULL,
`country` varchar(255) NOT NULL,
PRIMARY KEY (`id`),
KEY `start` (`start`),
KEY `end` (`end`)
);

INSERT INTO `networks`(`start`,`end`,`country_code`,`country`) VALUES
(INET6_ATON('2c0f:fff0::'),INET6_ATON('2c0f:fff0:ffff:ffff:ffff:ffff:ffff:ffff'),'NG','Nigeria'),
(INET6_ATON('2c0f:eef0::'),INET6_ATON('2c0f:eef0:ffff:ffff:ffff:ffff:ffff:ffff'),'GR','Greenland'),
(INET6_ATON('2c0f:ffe8::'),INET6_ATON('2c0f:ffe8:ffff:ffff:ffff:ffff:ffff:ffff'),'NG','Nigeria');

SELECT `id`, hex(`start`), hex(`end`), `country_code`, `country`
FROM  `networks`
WHERE INET6_ATON('2c0f:fff0:1234:5678:9101:1123::') & start=INET6_ATON('2c0f:fff0::');

SELECT `id`, hex(`start`), hex(`end`), `country_code`, `country`
FROM  `networks`
WHERE INET6_ATON('2c0f:ffe8:1234:5678:9101:1123::') & start=INET6_ATON('2c0f:ffe8::');

SELECT `id`, hex(`start`), hex(`end`), `country_code`, `country`
FROM  `networks`
WHERE INET6_ATON('2c0f:fff0::') | start=INET6_ATON('2c0f:fff0::');

SELECT `id`, hex(`start`), hex(`end`), `country_code`, `country`
FROM  `networks`
WHERE INET6_ATON('2c0f:ffe8::') | start=INET6_ATON('2c0f:ffe8::');

SELECT `id`, hex(`start`), hex(`end`), `country_code`, `country`
FROM `networks`
WHERE INET6_ATON('2c0f:fff0::') ^ start=INET6_ATON('::');

SELECT `id`, hex(`start`), hex(`end`), `country_code`, `country`
FROM `networks`
WHERE INET6_ATON('2c0f:ffe8::') ^ start=INET6_ATON('::');

DROP TABLE `networks`;

--echo # Table containing columns of MySQL types
create table at(_bit bit(64),
                _tin tinyint(8),
                _boo bool,
                _sms smallint signed,
                _smu smallint unsigned,
                _mes mediumint signed,
                _meu mediumint unsigned,
                _ins int signed,
                _inu int unsigned,
                _bis bigint signed,
                _biu bigint unsigned,
                _dec decimal (5,2),
                _flo float,
                _dou double,
                _yea year,
                _jsn json,
                _chr char(12),
                _vch varchar(12),
                _bin binary(255),
                _vbn varbinary(255),
                _tbl tinyblob,
                _ttx tinytext,
                _blb blob,
                _txt text,
                _mbb mediumblob,
                _mtx mediumtext,
                _lbb longblob,
                _ltx longtext,
                _pnt point,
                _dat date default '1988-12-15',
                _dtt datetime default '2015-10-24 12:00:00',
                _smp timestamp default '2015-10-24 14:00:00',
                _tim time default' 07:08:09',
                _enu enum('a', 'b', 'c'),
                _set set('a', 'b', 'c')
                );
insert into at (
    _bit,
    _tin,
    _boo,
    _sms,
    _smu,
    _mes,
    _meu,
    _ins,
    _inu,
    _bis,
    _biu,
    _dec,
    _flo,
    _dou,
    _yea,
    _jsn,
    _chr,
    _vch,
    _bin,
    _vbn,
    _tbl,
    _ttx,
    _blb,
    _txt,
    _mbb,
    _mtx,
    _lbb,
    _ltx,
    _pnt,
    _enu,
    _set
) values (
    64,
    64,
    true,
    64,
    64,
    64,
    64,
    64,
    64,
    64,
    64,
    64,
    64,
    64,
    2005,
    cast('{"a": 3}' as json),
    "abcdefghijkl",
    "abcdefghijkl",
    x
    x
    x
    "abcdefg",
    x'cafebabe',
    "abcdefg",
    x'cafebabe',
    "abcdefg",
    x'cafebabe',
    "abcdefg",
    st_geomfromtext('point(1 1)'),
    1,
    1
);

select * from at;

select _bit | 2147483647 from at;
select _tin | 2147483647 from at;
select _boo | 2147483647 from at;
select _sms | 2147483647 from at;
select _smu | 2147483647 from at;
select _mes | 2147483647 from at;
select _meu | 2147483647 from at;
select _ins | 2147483647 from at;
select _inu | 2147483647 from at;
select _bis | 2147483647 from at;
select _biu | 2147483647 from at;
select _dec | 2147483647 from at;
select _flo | 2147483647 from at;
select _dou | 2147483647 from at;
select _yea | 2147483647 from at;
select _jsn | 2147483647 from at;
select _chr | 2147483647 from at;
select _vch | 2147483647 from at;
select _bin | 2147483647 from at;
select _vbn | 2147483647 from at;
select _tbl | 2147483647 from at;
select _ttx | 2147483647 from at;
select _blb | 2147483647 from at;
select _txt | 2147483647 from at;
select _mbb | 2147483647 from at;
select _mtx | 2147483647 from at;
select _lbb | 2147483647 from at;
select _ltx | 2147483647 from at;
select _pnt | 2147483647 from at;
select _dat | 2147483647 from at;
select _dtt | 2147483647 from at;
select _smp | 2147483647 from at;
select _tim | 2147483647 from at;
select _enu | 2147483647 from at;
select _set | 2147483647 from at;

select _bit & 2147483647 from at;
select _tin & 2147483647 from at;
select _boo & 2147483647 from at;
select _sms & 2147483647 from at;
select _smu & 2147483647 from at;
select _mes & 2147483647 from at;
select _meu & 2147483647 from at;
select _ins & 2147483647 from at;
select _inu & 2147483647 from at;
select _bis & 2147483647 from at;
select _biu & 2147483647 from at;
select _dec & 2147483647 from at;
select _flo & 2147483647 from at;
select _dou & 2147483647 from at;
select _yea & 2147483647 from at;
select _jsn & 2147483647 from at;
select _chr & 2147483647 from at;
select _vch & 2147483647 from at;
select _bin & 2147483647 from at;
select _vbn & 2147483647 from at;
select _tbl & 2147483647 from at;
select _ttx & 2147483647 from at;
select _blb & 2147483647 from at;
select _txt & 2147483647 from at;
select _mbb & 2147483647 from at;
select _mtx & 2147483647 from at;
select _lbb & 2147483647 from at;
select _ltx & 2147483647 from at;
select _pnt & 2147483647 from at;
select _dat & 2147483647 from at;
select _dtt & 2147483647 from at;
select _smp & 2147483647 from at;
select _tim & 2147483647 from at;
select _enu & 2147483647 from at;
select _set & 2147483647 from at;

select _bit ^ 2147483647 from at;
select _tin ^ 2147483647 from at;
select _boo ^ 2147483647 from at;
select _sms ^ 2147483647 from at;
select _smu ^ 2147483647 from at;
select _mes ^ 2147483647 from at;
select _meu ^ 2147483647 from at;
select _ins ^ 2147483647 from at;
select _inu ^ 2147483647 from at;
select _bis ^ 2147483647 from at;
select _biu ^ 2147483647 from at;
select _dec ^ 2147483647 from at;
select _flo ^ 2147483647 from at;
select _dou ^ 2147483647 from at;
select _yea ^ 2147483647 from at;
select _jsn ^ 2147483647 from at;
select _chr ^ 2147483647 from at;
select _vch ^ 2147483647 from at;
select _bin ^ 2147483647 from at;
select _vbn ^ 2147483647 from at;
select _tbl ^ 2147483647 from at;
select _ttx ^ 2147483647 from at;
select _blb ^ 2147483647 from at;
select _txt ^ 2147483647 from at;
select _mbb ^ 2147483647 from at;
select _mtx ^ 2147483647 from at;
select _lbb ^ 2147483647 from at;
select _ltx ^ 2147483647 from at;
select _pnt ^ 2147483647 from at;
select _dat ^ 2147483647 from at;
select _dtt ^ 2147483647 from at;
select _smp ^ 2147483647 from at;
select _tim ^ 2147483647 from at;
select _enu ^ 2147483647 from at;
select _set ^ 2147483647 from at;

select _bit | x'cafebabe' from at;
select _tin | x'cafebabe' from at;
select _boo | x'cafebabe' from at;
select _sms | x'cafebabe' from at;
select _smu | x'cafebabe' from at;
select _mes | x'cafebabe' from at;
select _meu | x'cafebabe' from at;
select _ins | x'cafebabe' from at;
select _inu | x'cafebabe' from at;
select _bis | x'cafebabe' from at;
select _biu | x'cafebabe' from at;
select _dec | x'cafebabe' from at;
select _flo | x'cafebabe' from at;
select _dou | x'cafebabe' from at;
select _yea | x'cafebabe' from at;
select _jsn | x'cafebabe' from at;
select _chr | x'cafebabe' from at;
select _vch | x'cafebabe' from at;
select _bin | x'cafebabe' from at;
select _vbn | x'cafebabe' from at;
select _tbl | x'cafebabe' from at;
select _ttx | x'cafebabe' from at;
select _blb | x'cafebabe' from at;
select _txt | x'cafebabe' from at;
select _mbb | x'cafebabe' from at;
select _mtx | x'cafebabe' from at;
select _lbb | x'cafebabe' from at;
select _ltx | x'cafebabe' from at;
select _pnt | x'cafebabe' from at;
select _dat | x'cafebabe' from at;
select _dtt | x'cafebabe' from at;
select _smp | x'cafebabe' from at;
select _tim | x'cafebabe' from at;
select _enu | x'cafebabe' from at;
select _set | x'cafebabe' from at;

select _bit & x'cafebabe' from at;
select _tin & x'cafebabe' from at;
select _boo & x'cafebabe' from at;
select _sms & x'cafebabe' from at;
select _smu & x'cafebabe' from at;
select _mes & x'cafebabe' from at;
select _meu & x'cafebabe' from at;
select _ins & x'cafebabe' from at;
select _inu & x'cafebabe' from at;
select _bis & x'cafebabe' from at;
select _biu & x'cafebabe' from at;
select _dec & x'cafebabe' from at;
select _flo & x'cafebabe' from at;
select _dou & x'cafebabe' from at;
select _yea & x'cafebabe' from at;
select _jsn & x'cafebabe' from at;
select _chr & x'cafebabe' from at;
select _vch & x'cafebabe' from at;
select _bin & x'cafebabe' from at;
select _vbn & x'cafebabe' from at;
select _tbl & x'cafebabe' from at;
select _ttx & x'cafebabe' from at;
select _blb & x'cafebabe' from at;
select _txt & x'cafebabe' from at;
select _mbb & x'cafebabe' from at;
select _mtx & x'cafebabe' from at;
select _lbb & x'cafebabe' from at;
select _ltx & x'cafebabe' from at;
select _pnt & x'cafebabe' from at;
select _dat & x'cafebabe' from at;
select _dtt & x'cafebabe' from at;
select _smp & x'cafebabe' from at;
select _tim & x'cafebabe' from at;
select _enu & x'cafebabe' from at;
select _set & x'cafebabe' from at;

select _bit ^ x'cafebabe' from at;
select _tin ^ x'cafebabe' from at;
select _boo ^ x'cafebabe' from at;
select _sms ^ x'cafebabe' from at;
select _smu ^ x'cafebabe' from at;
select _mes ^ x'cafebabe' from at;
select _meu ^ x'cafebabe' from at;
select _ins ^ x'cafebabe' from at;
select _inu ^ x'cafebabe' from at;
select _bis ^ x'cafebabe' from at;
select _biu ^ x'cafebabe' from at;
select _dec ^ x'cafebabe' from at;
select _flo ^ x'cafebabe' from at;
select _dou ^ x'cafebabe' from at;
select _yea ^ x'cafebabe' from at;
select _jsn ^ x'cafebabe' from at;
select _chr ^ x'cafebabe' from at;
select _vch ^ x'cafebabe' from at;
select _bin ^ x'cafebabe' from at;
select _vbn ^ x'cafebabe' from at;
select _tbl ^ x'cafebabe' from at;
select _ttx ^ x'cafebabe' from at;
select _blb ^ x'cafebabe' from at;
select _txt ^ x'cafebabe' from at;
select _mbb ^ x'cafebabe' from at;
select _mtx ^ x'cafebabe' from at;
select _lbb ^ x'cafebabe' from at;
select _ltx ^ x'cafebabe' from at;
select _pnt ^ x'cafebabe' from at;
select _dat ^ x'cafebabe' from at;
select _dtt ^ x'cafebabe' from at;
select _smp ^ x'cafebabe' from at;
select _tim ^ x'cafebabe' from at;
select _enu ^ x'cafebabe' from at;
select _set ^ x'cafebabe' from at;

select hex(_bin & _bin), hex(_bin & _vbn), hex(_vbn & _bin), hex(_vbn & _vbn) from at;
select hex(_bin | _bin), hex(_bin | _vbn), hex(_vbn | _bin), hex(_vbn | _vbn) from at;
select hex(_bin ^ _bin), hex(_bin ^ _vbn), hex(_vbn ^ _bin), hex(_vbn ^ _vbn) from at;

--error ER_TRUNCATED_WRONG_VALUE
INSERT INTO at(_bin) (select _bin ^ x'cafebabe' from at);
--echo #Turn strict mode OFF
--source include/turn_off_strict_mode.inc
INSERT INTO at(_bin) (select _bin ^ x'cafebabe' from at);
drop table at;


--echo # Test of bitwise aggregate functions on BINARY
create table t(a varbinary(10));
insert into t values(0xFF00F0F0), (0xF0F0FF00);
select bit_and(a) from t;
select bit_or(a) from t;
select bit_xor(a) from t;
select hex(bit_and(a)) from t;
select hex(bit_or(a)) from t;
select hex(bit_xor(a)) from t;
truncate table t;

--echo #NULL value
insert into t values(NULL);
select hex(bit_and(a)) from t;
select hex(bit_or(a)) from t;
select hex(bit_xor(a)) from t;
truncate table t;

--echo #first value is null
insert into t values(NULL), (0xFF00F0F0), (0xF0F0FF00);
select hex(bit_and(a)) from t;
select hex(bit_or(a)) from t;
select hex(bit_xor(a)) from t;
truncate table t;

--echo #last value is null
insert into t values(0xFF00F0F0), (0xF0F0FF00), (NULL);
select hex(bit_and(a)) from t;
select hex(bit_or(a)) from t;
select hex(bit_xor(a)) from t;
truncate table t;

--echo #a value in the middle is null
insert into t values(0xFF00F0F0), (NULL), (0xF0F0FF00);
select hex(bit_and(a)) from t;
select hex(bit_or(a)) from t;
select hex(bit_xor(a)) from t;
drop table t;


--echo #different sizes
create table t(group_id int, a varbinary(10));
insert into t values(1, 0xFF00F0F0), (1, 0xFF00);

select hex(bit_and(lpad(a, 10, 0x00))) from t;

select bit_and(a) from t;
select bit_or(a) from t;
select bit_xor(a) from t;

prepare s1 from "select group_id, hex(bit_and(a)) from t group by group_id";
execute s1;

prepare s2 from "select group_id, hex(bit_or(a)) from t group by group_id";
execute s2;

prepare s3 from "select group_id, hex(bit_xor(a)) from t group by group_id";
execute s3;

prepare s4 from "select hex(bit_and(a)) from t";
execute s4;

prepare s5 from "select hex(bit_or(a)) from t";
execute s5;

prepare s6 from "select hex(bit_xor(a)) from t";
execute s6;
truncate table t;

--echo #different sizes
insert into t values(1, 0xFF00), (1, 0xFF00F0F0);
select bit_and(a) from t;
select bit_or(a) from t;
select bit_xor(a) from t;

prepare s1 from "select group_id, hex(bit_and(a)) from t group by group_id";
execute s1;

prepare s2 from "select group_id, hex(bit_or(a)) from t group by group_id";
execute s2;

prepare s3 from "select group_id, hex(bit_xor(a)) from t group by group_id";
execute s3;

prepare s4 from "select hex(bit_and(a)) from t";
execute s4;

prepare s5 from "select hex(bit_or(a)) from t";
execute s5;

prepare s6 from "select hex(bit_xor(a)) from t";
execute s6;

truncate table t;

--echo #group 1
select
hex(0x34567101ABFF00F0F0 & 0x34567102ABF0F0F0F0 & 0x34567103ABFF00F0F0 & 0x34567104ABF0F0F0F0),
hex(0x34567101ABFF00F0F0 | 0x34567102ABF0F0F0F0 | 0x34567103ABFF00F0F0 | 0x34567104ABF0F0F0F0),
hex(0x34567101ABFF00F0F0 ^ 0x34567102ABF0F0F0F0 ^ 0x34567103ABFF00F0F0 ^ 0x34567104ABF0F0F0F0);

--echo #group 4
select
hex(0x34567100ABF0F0F0F0 & 0x34567101ABFF00F0F0),
hex(0x34567100ABF0F0F0F0 | 0x34567101ABFF00F0F0),
hex(0x34567100ABF0F0F0F0 ^ 0x34567101ABFF00F0F0);

--echo #group 5
select
hex(0xABCDEF & 0x123456 & 0x789123),
hex(0xABCDEF | 0x123456 | 0x789123),
hex(0xABCDEF ^ 0x123456 ^ 0x789123);

insert into t(group_id, a) values
(1,0x34567101ABFF00F0F0),
(1,0x34567102ABF0F0F0F0),
(1,0x34567103ABFF00F0F0),
(1,0x34567104ABF0F0F0F0),
(2,NULL),
(3,0x34567104ABF0F0F0F0),
(4,0x34567100ABF0F0F0F0),
(4,NULL),
(4,0x34567101ABFF00F0F0),
(5,unhex('ABCDEF')),
(5,unhex('123456')),
(5,unhex('789123'));

--echo #with group by
select group_id, hex(bit_and(a)), hex(bit_or(a)), hex(bit_xor(a)) from t group by group_id;

select group_id, hex(bit_and(a)), bit_and(192), bit_and(0x303233), bit_and(binary "foo") from t group by group_id;

select bit_count(group_id), bit_count(a), bit_count(192), bit_count(0x303233), bit_count(binary "foo"), bit_count(NULL) from t;

--echo #prepared statement with group by
prepare s1 from "select hex(bit_and(a)),hex(bit_or(a)),hex(bit_xor(a)) from t where group_id = 5";
execute s1;
execute s1;

--echo #prepared statement
prepare s2 from "select group_id, hex(bit_and(a)), hex(bit_or(a)), hex(bit_xor(a)) from t group by group_id";
execute s2;
execute s2;
drop table t;
