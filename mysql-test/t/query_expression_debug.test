--source include/have_debug.inc

--source include/query_expression.inc

CREATE TABLE r(a INT);
CREATE TABLE s(a INT);
CREATE TABLE t(a INT);
--error ER_NOT_SUPPORTED_YET
SELECT * FROM r INTERSECT SELECT * FROM s;
--error ER_NOT_SUPPORTED_YET
SELECT * FROM r EXCEPT SELECT * FROM s;

SET SESSION debug_enable_extended_set_ops=true;

--echo # [NEW]
--echo # Test operator precedence


--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   (SELECT * FROM r UNION ALL SELECT * FROM s) INTERSECT ALL SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   SELECT * FROM r UNION ALL SELECT * FROM s INTERSECT ALL SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   (SELECT * FROM r EXCEPT ALL SELECT * FROM s) INTERSECT ALL SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   SELECT * FROM r EXCEPT ALL SELECT * FROM s INTERSECT ALL SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   (SELECT * FROM r EXCEPT ALL SELECT * FROM s) UNION ALL SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   SELECT * FROM r EXCEPT ALL SELECT * FROM s UNION ALL SELECT * FROM t;

--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   (SELECT * FROM r UNION DISTINCT SELECT * FROM s) INTERSECT DISTINCT SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   SELECT * FROM r UNION DISTINCT SELECT * FROM s INTERSECT DISTINCT SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   (SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s) INTERSECT DISTINCT SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s INTERSECT DISTINCT SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   (SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s) UNION DISTINCT SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s UNION DISTINCT SELECT * FROM t;

--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   (SELECT * FROM r UNION SELECT * FROM s) INTERSECT SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   SELECT * FROM r UNION SELECT * FROM s INTERSECT SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   (SELECT * FROM r EXCEPT SELECT * FROM s) INTERSECT SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   SELECT * FROM r EXCEPT SELECT * FROM s INTERSECT SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   (SELECT * FROM r EXCEPT SELECT * FROM s) UNION SELECT * FROM t;
--replace_regex $elide_costs
EXPLAIN FORMAT = tree
   SELECT * FROM r EXCEPT SELECT * FROM s UNION SELECT * FROM t;

--echo #
--echo # Bug#33905918 Server crashes after using explain of a query with except/intersect.
--echo #
EXPLAIN SELECT * FROM r UNION ALL SELECT * FROM s;
EXPLAIN SELECT * FROM r EXCEPT ALL SELECT * FROM s;
EXPLAIN SELECT * FROM r INTERSECT ALL SELECT * FROM s;
EXPLAIN SELECT * FROM r UNION DISTINCT SELECT * FROM s;
EXPLAIN SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s;
EXPLAIN SELECT * FROM r INTERSECT DISTINCT SELECT * FROM s;

EXPLAIN FORMAT = json SELECT * FROM r UNION ALL SELECT * FROM s;
EXPLAIN FORMAT = json SELECT * FROM r EXCEPT ALL SELECT * FROM s;
EXPLAIN FORMAT = json SELECT * FROM r INTERSECT ALL SELECT * FROM s;
EXPLAIN FORMAT = json SELECT * FROM r UNION DISTINCT SELECT * FROM s;
EXPLAIN FORMAT = json SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s;
EXPLAIN FORMAT = json SELECT * FROM r INTERSECT DISTINCT SELECT * FROM s;

EXPLAIN (SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s) UNION DISTINCT SELECT * FROM t;
EXPLAIN (SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s) UNION DISTINCT
        (SELECT * FROM t INTERSECT DISTINCT SELECT * FROM t);

EXPLAIN FORMAT = json
   (SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s) UNION DISTINCT SELECT * FROM t;
EXPLAIN FORMAT = json
   (SELECT * FROM r EXCEPT DISTINCT SELECT * FROM s) UNION DISTINCT
   (SELECT * FROM t INTERSECT DISTINCT SELECT * FROM t);

DROP TABLE r, s, t;

--echo #
--echo # Check that more set ops don't interfere with
--echo # WITH RECURSIVE
--echo #

--error ER_CTE_RECURSIVE_REQUIRES_UNION
WITH RECURSIVE qn AS
(SELECT 1 AS n, 1 AS un, 1 AS unp1 EXCEPT ALL
   SELECT 1+n, unp1, un+unp1 FROM qn WHERE n<10)
SELECT * FROM qn;

--error ER_CTE_RECURSIVE_REQUIRES_UNION
WITH RECURSIVE qn AS
(SELECT 1 AS n, 1 AS un, 1 AS unp1 INTERSECT ALL
   SELECT 1+n, unp1, un+unp1 FROM qn WHERE n<10)
SELECT * FROM qn;

CREATE TABLE t(n int, un INT, unp1 INT);
INSERT INTO t VALUES (1, 1, 1);

--echo Non-union set op in seed works
WITH RECURSIVE qn AS
( SELECT * FROM t INTERSECT
  VALUES ROW(1, 1, 1) UNION ALL
 SELECT 1+n, unp1, un+unp1 FROM qn WHERE n<10)
SELECT * FROM qn;

--error ER_CTE_RECURSIVE_NOT_UNION
WITH RECURSIVE qn AS
( SELECT * FROM t UNION ALL
  (SELECT 1,1,1 INTERSECT SELECT 1+n, unp1, un+unp1 FROM qn WHERE n < 20)) SELECT * FROM qn;

--error ER_CTE_RECURSIVE_NOT_UNION
WITH RECURSIVE qn AS
( SELECT * FROM t UNION ALL
  (SELECT 1+n, unp1, un+unp1 FROM qn WHERE n<10 INTERSECT SELECT 1,1,1)) SELECT * FROM qn;

DROP TABLE t;

SET SESSION debug_enable_extended_set_ops=default;


