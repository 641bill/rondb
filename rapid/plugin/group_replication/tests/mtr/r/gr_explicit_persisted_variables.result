include/group_replication.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection server1]

############################################################
# 1. Persist configuration on server. Check variable_source
#    as DYNAMIC.
[connection server1]
SET PERSIST group_replication_group_name= "GROUP_REPLICATION_GROUP_NAME";
SET PERSIST group_replication_group_seeds= @@GLOBAL.group_replication_group_seeds;
SET PERSIST group_replication_local_address= @@GLOBAL.group_replication_local_address;
SET PERSIST group_replication_start_on_boot= ON;
SET PERSIST group_replication_bootstrap_group= ON;
# Start group replication
START GROUP_REPLICATION;
include/gr_wait_for_member_state.inc

# There must be 5 variables shown as DYNAMIC.
SELECT vi.variable_name variable_name, vi.variable_source variable_source
FROM performance_schema.variables_info vi
JOIN performance_schema.persisted_variables pv
JOIN performance_schema.global_variables gv
ON vi.variable_name = pv.variable_name AND vi.variable_name = gv.variable_name;
variable_name	variable_source
group_replication_bootstrap_group	DYNAMIC
group_replication_group_name	DYNAMIC
group_replication_group_seeds	DYNAMIC
group_replication_local_address	DYNAMIC
group_replication_start_on_boot	DYNAMIC

############################################################
# 2. Restart server. Verify group is bootstraped and
#    variables are shown as PERSISTED.
# restart
include/rpl_reconnect.inc
include/gr_wait_for_member_state.inc

# There must be 5 variables shown as PERSISTED.
SELECT vi.variable_name variable_name, vi.variable_source variable_source
FROM performance_schema.variables_info vi
JOIN performance_schema.persisted_variables pv
JOIN performance_schema.global_variables gv
ON vi.variable_name = pv.variable_name AND vi.variable_name = gv.variable_name;
variable_name	variable_source
group_replication_bootstrap_group	PERSISTED
group_replication_group_name	PERSISTED
group_replication_group_seeds	PERSISTED
group_replication_local_address	PERSISTED
group_replication_start_on_boot	PERSISTED
include/assert.inc ['Expect 5 persisted variables.']
# Uninstall plugin
UNINSTALL PLUGIN group_replication;

############################################################
# 3. Restart server without plugin. Post install plugin
#    variable_source must be shown as PERSISTED.
SET SESSION sql_log_bin= 0;
call mtr.add_suppression("unknown variable 'loose_group_replication");
SET SESSION sql_log_bin= 1;
# restart: --plugin-load=
include/rpl_reconnect.inc

# There must be NO variable shown as PERSISTED.
SELECT vi.variable_name variable_name, vi.variable_source variable_source
FROM performance_schema.variables_info vi
JOIN performance_schema.persisted_variables pv
JOIN performance_schema.global_variables gv
ON vi.variable_name = pv.variable_name AND vi.variable_name =
gv.variable_name;
variable_name	variable_source
INSTALL PLUGIN group_replication SONAME 'GROUP_REPLICATION';
include/gr_wait_for_member_state.inc

# There must be 5 variables shown as PERSISTED.
SELECT vi.variable_name variable_name, vi.variable_source variable_source
FROM performance_schema.variables_info vi
JOIN performance_schema.persisted_variables pv
JOIN performance_schema.global_variables gv
ON vi.variable_name = pv.variable_name AND vi.variable_name =
gv.variable_name;
variable_name	variable_source
group_replication_bootstrap_group	PERSISTED
group_replication_group_name	PERSISTED
group_replication_group_seeds	PERSISTED
group_replication_local_address	PERSISTED
group_replication_start_on_boot	PERSISTED
include/assert.inc ['Expect 5 persisted variables after install plugin.']

############################################################
# 4. Clean up.
[connection server1]
RESET PERSIST;
SET GLOBAL group_replication_start_on_boot= OFF;
SET GLOBAL group_replication_bootstrap_group= OFF;
include/assert.inc ['There must be 0 persisted variables after RESET PERSIST.']
include/group_replication_end.inc
